{"version":3,"file":"caption-parsing-BajVcUS6.js","sources":["../../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/generated/decode-data-html.js","../../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/generated/decode-data-xml.js","../../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/decode_codepoint.js","../../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/decode.js","../../node_modules/.pnpm/entities@4.5.0/node_modules/entities/lib/esm/escape.js","../../node_modules/.pnpm/parse5@7.2.1/node_modules/parse5/dist/common/unicode.js","../../node_modules/.pnpm/parse5@7.2.1/node_modules/parse5/dist/common/error-codes.js","../../node_modules/.pnpm/parse5@7.2.1/node_modules/parse5/dist/tokenizer/preprocessor.js","../../node_modules/.pnpm/parse5@7.2.1/node_modules/parse5/dist/common/token.js","../../node_modules/.pnpm/parse5@7.2.1/node_modules/parse5/dist/common/html.js","../../node_modules/.pnpm/parse5@7.2.1/node_modules/parse5/dist/tokenizer/index.js","../../node_modules/.pnpm/parse5@7.2.1/node_modules/parse5/dist/parser/open-element-stack.js","../../node_modules/.pnpm/parse5@7.2.1/node_modules/parse5/dist/parser/formatting-element-list.js","../../node_modules/.pnpm/parse5@7.2.1/node_modules/parse5/dist/tree-adapters/default.js","../../node_modules/.pnpm/parse5@7.2.1/node_modules/parse5/dist/common/doctype.js","../../node_modules/.pnpm/parse5@7.2.1/node_modules/parse5/dist/common/foreign-content.js","../../node_modules/.pnpm/parse5@7.2.1/node_modules/parse5/dist/parser/index.js","../../node_modules/.pnpm/parse5@7.2.1/node_modules/parse5/dist/serializer/index.js","../../node_modules/.pnpm/parse5@7.2.1/node_modules/parse5/dist/index.js","../../node_modules/.pnpm/parse5-htmlparser2-tree-adapter@7.1.0/node_modules/parse5-htmlparser2-tree-adapter/dist/index.js","../../node_modules/.pnpm/cheerio@1.0.0/node_modules/cheerio/dist/browser/parsers/parse5-adapter.js","../../node_modules/.pnpm/htmlparser2@9.1.0/node_modules/htmlparser2/lib/esm/Tokenizer.js","../../node_modules/.pnpm/htmlparser2@9.1.0/node_modules/htmlparser2/lib/esm/Parser.js","../../node_modules/.pnpm/htmlparser2@9.1.0/node_modules/htmlparser2/lib/esm/index.js","../../node_modules/.pnpm/subsrt-ts@2.1.2/node_modules/subsrt-ts/dist/handler.js","../../node_modules/.pnpm/subsrt-ts@2.1.2/node_modules/subsrt-ts/dist/format/ssa.js","../../node_modules/.pnpm/subsrt-ts@2.1.2/node_modules/subsrt-ts/dist/format/ass.js","../../node_modules/.pnpm/subsrt-ts@2.1.2/node_modules/subsrt-ts/dist/format/json.js","../../node_modules/.pnpm/subsrt-ts@2.1.2/node_modules/subsrt-ts/dist/format/lrc.js","../../node_modules/.pnpm/subsrt-ts@2.1.2/node_modules/subsrt-ts/dist/format/sbv.js","../../node_modules/.pnpm/subsrt-ts@2.1.2/node_modules/subsrt-ts/dist/format/smi.js","../../node_modules/.pnpm/subsrt-ts@2.1.2/node_modules/subsrt-ts/dist/format/srt.js","../../node_modules/.pnpm/subsrt-ts@2.1.2/node_modules/subsrt-ts/dist/format/sub.js","../../node_modules/.pnpm/subsrt-ts@2.1.2/node_modules/subsrt-ts/dist/format/vtt.js","../../node_modules/.pnpm/subsrt-ts@2.1.2/node_modules/subsrt-ts/dist/format/index.js","../../node_modules/.pnpm/subsrt-ts@2.1.2/node_modules/subsrt-ts/dist/subsrt.js","../../node_modules/.pnpm/dompurify@3.2.3/node_modules/dompurify/dist/purify.es.mjs","../../node_modules/.pnpm/fuse.js@7.0.0/node_modules/fuse.js/dist/fuse.mjs"],"sourcesContent":["// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-html.js.map","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-xml.js.map","// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([\n    [0, 65533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n    let output = \"\";\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint) {\n    var _a;\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return 0xfffd;\n    }\n    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport default function decodeCodePoint(codePoint) {\n    return fromCodePoint(replaceCodePoint(codePoint));\n}\n//# sourceMappingURL=decode_codepoint.js.map","import htmlDecodeTree from \"./generated/decode-data-html.js\";\nimport xmlDecodeTree from \"./generated/decode-data-xml.js\";\nimport decodeCodePoint, { replaceCodePoint, fromCodePoint, } from \"./decode_codepoint.js\";\n// Re-export for use by eg. htmlparser2\nexport { htmlDecodeTree, xmlDecodeTree, decodeCodePoint };\nexport { replaceCodePoint, fromCodePoint } from \"./decode_codepoint.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes || (CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 0b100000;\nexport var BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F));\n}\nfunction isAsciiAlphaNumeric(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code));\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nexport var DecodingMode;\n(function (DecodingMode) {\n    /** Entities in text nodes that can end with any character. */\n    DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */\n    DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */\n    DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nexport class EntityDecoder {\n    constructor(\n    /** The tree used to decode entities. */\n    decodeTree, \n    /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */\n    emitCodePoint, \n    /** An object that is used to produce errors. */\n    errors) {\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */\n        this.state = EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */\n        this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */\n        this.result = 0;\n        /** The current index in the decode tree. */\n        this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */\n        this.excess = 1;\n        /** The mode in which the decoder is operating. */\n        this.decodeMode = DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param string The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(str, offset) {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (str.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(str, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(str, offset);\n            }\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(str, offset);\n            }\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(str, offset);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(str, offset);\n            }\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(str, offset);\n            }\n        }\n    }\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericStart(str, offset) {\n        if (offset >= str.length) {\n            return -1;\n        }\n        if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(str, offset + 1);\n        }\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(str, offset);\n    }\n    addToNumericResult(str, start, end, base) {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                    parseInt(str.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericHex(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 16);\n        return -1;\n    }\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericDecimal(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 10);\n        return -1;\n    }\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    emitNumericEntity(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        }\n        else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    }\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNamedEntity(str, offset) {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n        for (; offset < str.length; offset++, this.excess++) {\n            const char = str.charCodeAt(offset);\n            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                }\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNotTerminatedNamedEntity() {\n        var _a;\n        const { result, decodeTree } = this;\n        const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    }\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNamedEntityData(result, valueLength, consumed) {\n        const { decodeTree } = this;\n        this.emitCodePoint(valueLength === 1\n            ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n            : decodeTree[result + 1], consumed);\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n        return consumed;\n    }\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end() {\n        var _a;\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree) {\n    let ret = \"\";\n    const decoder = new EntityDecoder(decodeTree, (str) => (ret += fromCodePoint(str)));\n    return function decodeWithTrie(str, decodeMode) {\n        let lastIndex = 0;\n        let offset = 0;\n        while ((offset = str.indexOf(\"&\", offset)) >= 0) {\n            ret += str.slice(lastIndex, offset);\n            decoder.startEntity(decodeMode);\n            const len = decoder.write(str, \n            // Skip the \"&\"\n            offset + 1);\n            if (len < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n            lastIndex = offset + len;\n            // If `len` is 0, skip the current `&` and continue.\n            offset = len === 0 ? lastIndex + 1 : lastIndex;\n        }\n        const result = ret + str.slice(lastIndex);\n        // Make sure we don't keep a reference to the final string.\n        ret = \"\";\n        return result;\n    };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nexport function determineBranch(decodeTree, current, nodeIdx, char) {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIdx + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIdx;\n    let hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midVal = decodeTree[mid];\n        if (midVal < char) {\n            lo = mid + 1;\n        }\n        else if (midVal > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\nconst htmlDecoder = getDecoder(htmlDecodeTree);\nconst xmlDecoder = getDecoder(xmlDecodeTree);\n/**\n * Decodes an HTML string.\n *\n * @param str The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nexport function decodeHTML(str, mode = DecodingMode.Legacy) {\n    return htmlDecoder(str, mode);\n}\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLAttribute(str) {\n    return htmlDecoder(str, DecodingMode.Attribute);\n}\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLStrict(str) {\n    return htmlDecoder(str, DecodingMode.Strict);\n}\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeXML(str) {\n    return xmlDecoder(str, DecodingMode.Strict);\n}\n//# sourceMappingURL=decode.js.map","export const xmlReplacer = /[\"&'<>$\\x80-\\uFFFF]/g;\nconst xmlCodeMap = new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [39, \"&apos;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n]);\n// For compatibility with node < 4, we wrap `codePointAt`\nexport const getCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null\n    ? (str, index) => str.codePointAt(index)\n    : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        (c, index) => (c.charCodeAt(index) & 0xfc00) === 0xd800\n            ? (c.charCodeAt(index) - 0xd800) * 0x400 +\n                c.charCodeAt(index + 1) -\n                0xdc00 +\n                0x10000\n            : c.charCodeAt(index);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexport function encodeXML(str) {\n    let ret = \"\";\n    let lastIdx = 0;\n    let match;\n    while ((match = xmlReplacer.exec(str)) !== null) {\n        const i = match.index;\n        const char = str.charCodeAt(i);\n        const next = xmlCodeMap.get(char);\n        if (next !== undefined) {\n            ret += str.substring(lastIdx, i) + next;\n            lastIdx = i + 1;\n        }\n        else {\n            ret += `${str.substring(lastIdx, i)}&#x${getCodePoint(str, i).toString(16)};`;\n            // Increase by 1 if we have a surrogate pair\n            lastIdx = xmlReplacer.lastIndex += Number((char & 0xfc00) === 0xd800);\n        }\n    }\n    return ret + str.substr(lastIdx);\n}\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nexport const escape = encodeXML;\n/**\n * Creates a function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n *\n * @param regex Regular expression to match characters to escape.\n * @param map Map of characters to escape to their entities.\n *\n * @returns Function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n */\nfunction getEscaper(regex, map) {\n    return function escape(data) {\n        let match;\n        let lastIdx = 0;\n        let result = \"\";\n        while ((match = regex.exec(data))) {\n            if (lastIdx !== match.index) {\n                result += data.substring(lastIdx, match.index);\n            }\n            // We know that this character will be in the map.\n            result += map.get(match[0].charCodeAt(0));\n            // Every match will be of length 1\n            lastIdx = match.index + 1;\n        }\n        return result + data.substring(lastIdx);\n    };\n}\n/**\n * Encodes all characters not valid in XML documents using XML entities.\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nexport const escapeUTF8 = getEscaper(/[&<>'\"]/g, xmlCodeMap);\n/**\n * Encodes all characters that have to be escaped in HTML attributes,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeAttribute = getEscaper(/[\"&\\u00A0]/g, new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [160, \"&nbsp;\"],\n]));\n/**\n * Encodes all characters that have to be escaped in HTML text,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeText = getEscaper(/[&<>\\u00A0]/g, new Map([\n    [38, \"&amp;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n    [160, \"&nbsp;\"],\n]));\n//# sourceMappingURL=escape.js.map","const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n})(CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR || (ERR = {}));\n","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code, cpOffset) {\n        const { line, col, offset } = this;\n        const startCol = col + cpOffset;\n        const startOffset = offset + cpOffset;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol,\n            endCol: startCol,\n            startOffset,\n            endOffset: startOffset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code, 0));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n","/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SEARCH\"] = \"search\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SEARCH\"] = 94] = \"SEARCH\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 95] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 96] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 97] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 98] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 99] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 100] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 101] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 102] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 103] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 104] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 105] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 106] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 107] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 108] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 109] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 110] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 111] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 112] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 113] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 114] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 115] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 116] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 117] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 118] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 119] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 120] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 121] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 122] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 123] = \"XMP\";\n})(TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SEARCH, TAG_ID.SEARCH],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport const NUMBERED_HEADERS = new Set([$.H1, $.H2, $.H3, $.H4, $.H5, $.H6]);\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, EntityDecoder, DecodingMode } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 72] = \"AMBIGUOUS_AMPERSAND\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\nfunction getErrorForNumericCharacterReference(code) {\n    if (code === $.NULL) {\n        return ERR.nullCharacterReference;\n    }\n    else if (code > 1114111) {\n        return ERR.characterReferenceOutsideUnicodeRange;\n    }\n    else if (isSurrogate(code)) {\n        return ERR.surrogateCharacterReference;\n    }\n    else if (isUndefinedCodePoint(code)) {\n        return ERR.noncharacterCharacterReference;\n    }\n    else if (isControlCodePoint(code) || code === $.CARRIAGE_RETURN) {\n        return ERR.controlCharacterReference;\n    }\n    return null;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.entityStartPos = 0;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n        this.entityDecoder = new EntityDecoder(htmlDecodeTree, (cp, consumed) => {\n            // Note: Set `pos` _before_ flushing, as flushing might drop\n            // the current chunk and invalidate `entityStartPos`.\n            this.preprocessor.pos = this.entityStartPos + consumed - 1;\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }, handler.onParseError\n            ? {\n                missingSemicolonAfterCharacterReference: () => {\n                    this._err(ERR.missingSemicolonAfterCharacterReference, 1);\n                },\n                absenceOfDigitsInNumericCharacterReference: (consumed) => {\n                    this._err(ERR.absenceOfDigitsInNumericCharacterReference, this.entityStartPos - this.preprocessor.pos + consumed);\n                },\n                validateNumericCharacterReference: (code) => {\n                    const error = getErrorForNumericCharacterReference(code);\n                    if (error)\n                        this._err(error, 1);\n                },\n            }\n            : undefined);\n    }\n    //Errors\n    _err(code, cpOffset = 0) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code, cpOffset));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this.preprocessor.retreat(this.consumedAfterSnapshot);\n            this.consumedAfterSnapshot = 0;\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: The specification uses only one type of character token (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type === type) {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n            else {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _startCharacterReference() {\n        this.returnState = this.state;\n        this.state = State.CHARACTER_REFERENCE;\n        this.entityStartPos = this.preprocessor.pos;\n        this.entityDecoder.startEntity(this._isCharacterReferenceInAttribute() ? DecodingMode.Attribute : DecodingMode.Legacy);\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference();\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this._startCharacterReference();\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference() {\n        let length = this.entityDecoder.write(this.preprocessor.html, this.preprocessor.pos);\n        if (length < 0) {\n            if (this.preprocessor.lastChunkWritten) {\n                length = this.entityDecoder.end();\n            }\n            else {\n                // Wait for the rest of the entity.\n                this.active = false;\n                // Mark the entire buffer as read.\n                this.preprocessor.pos = this.preprocessor.html.length - 1;\n                this.consumedAfterSnapshot = 0;\n                this.preprocessor.endOfChunkHit = true;\n                return;\n            }\n        }\n        if (length === 0) {\n            // This was not a valid entity. Go back to the beginning, and\n            // figure out what to do.\n            this.preprocessor.pos = this.entityStartPos;\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state =\n                !this._isCharacterReferenceInAttribute() && isAsciiAlphaNumeric(this.preprocessor.peek(1))\n                    ? State.AMBIGUOUS_AMPERSAND\n                    : this.returnState;\n        }\n        else {\n            // We successfully parsed an entity. Switch to the return state.\n            this.state = this.returnState;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this.state = this.returnState;\n            this._callState(cp);\n        }\n    }\n}\n","import { TAG_ID as $, NS, NUMBERED_HEADERS } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENTS_HTML = new Set([\n    $.APPLET,\n    $.CAPTION,\n    $.HTML,\n    $.MARQUEE,\n    $.OBJECT,\n    $.TABLE,\n    $.TD,\n    $.TEMPLATE,\n    $.TH,\n]);\nconst SCOPING_ELEMENTS_HTML_LIST = new Set([...SCOPING_ELEMENTS_HTML, $.OL, $.UL]);\nconst SCOPING_ELEMENTS_HTML_BUTTON = new Set([...SCOPING_ELEMENTS_HTML, $.BUTTON]);\nconst SCOPING_ELEMENTS_MATHML = new Set([$.ANNOTATION_XML, $.MI, $.MN, $.MO, $.MS, $.MTEXT]);\nconst SCOPING_ELEMENTS_SVG = new Set([$.DESC, $.FOREIGN_OBJECT, $.TITLE]);\nconst TABLE_ROW_CONTEXT = new Set([$.TR, $.TEMPLATE, $.HTML]);\nconst TABLE_BODY_CONTEXT = new Set([$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML]);\nconst TABLE_CONTEXT = new Set([$.TABLE, $.TEMPLATE, $.HTML]);\nconst TABLE_CELLS = new Set([$.TD, $.TH]);\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NUMBERED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.has(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInDynamicScope(tagName, htmlScope) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (tn === tagName)\n                        return true;\n                    if (htmlScope.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML);\n    }\n    hasInListItemScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_LIST);\n    }\n    hasInButtonScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_BUTTON);\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            switch (this.treeAdapter.getNamespaceURI(this.items[i])) {\n                case NS.HTML: {\n                    if (NUMBERED_HEADERS.has(tn))\n                        return true;\n                    if (SCOPING_ELEMENTS_HTML.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.SVG: {\n                    if (SCOPING_ELEMENTS_SVG.has(tn))\n                        return false;\n                    break;\n                }\n                case NS.MATHML: {\n                    if (SCOPING_ELEMENTS_MATHML.has(tn))\n                        return false;\n                    break;\n                }\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    return true;\n                }\n                case $.TABLE:\n                case $.HTML: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== NS.HTML) {\n                continue;\n            }\n            switch (this.tagIDs[i]) {\n                case tagName: {\n                    return true;\n                }\n                case $.OPTION:\n                case $.OPTGROUP: {\n                    break;\n                }\n                default: {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n","import { DOCUMENT_MODE } from '../common/html.js';\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    createTextNode(value) {\n        return {\n            nodeName: '#text',\n            value,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, defaultTreeAdapter.createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, defaultTreeAdapter.createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, NUMBERED_HEADERS, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, \n    /** @internal */\n    fragmentContext = null, \n    /** @internal */\n    scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        /** @internal */\n        this.insertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        /** @internal */\n        this.headElement = null;\n        /** @internal */\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         *\n         * @internal\n         */\n        this.tmplInsertionModeStack = [];\n        /** @internal */\n        this.pendingCharacterTokens = [];\n        /** @internal */\n        this.hasNonWhitespacePendingCharacterToken = false;\n        /** @internal */\n        this.framesetOk = true;\n        /** @internal */\n        this.skipNextNewLine = false;\n        /** @internal */\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    /** @internal */\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    /** @internal */\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    /** @internal */\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    /** @protected */\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    /** @protected */\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    /** @protected */\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    /** @protected */\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    /** @protected */\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    /**\n     * For self-closing tags. Add an element to the tree, but skip adding it\n     * to the stack.\n     */\n    /** @protected */\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    /** @protected */\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    /** @protected */\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    /** @protected */\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    /** @protected */\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    /** @protected */\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    /** @protected */\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    /** @protected */\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    /** @protected */\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    /** @protected */\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    /** @protected */\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    /** @protected */\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    /** @protected */\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    /** @protected */\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    /** @protected */\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    /** @protected */\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    /** @protected */\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    /** @protected */\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    /** @protected */\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    /** @protected */\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    /** @protected */\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    /** @internal */\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     * @protected\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    /** @internal */\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (NUMBERED_HEADERS.has(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as a user agent with enabled plugins/frames, so we parse\n//<noembed>/<noframes> as rawtext.\nfunction rawTextStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED:\n        case $.NOFRAMES: {\n            rawTextStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                rawTextStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SEARCH:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.HR: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n","import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const str = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (attr.namespace) {\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        }\n        else {\n            html += attr.name;\n        }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n","import { Parser } from './parser/index.js';\nexport { defaultTreeAdapter } from './tree-adapters/default.js';\nexport { /** @internal */ Parser } from './parser/index.js';\nexport { serialize, serializeOuter } from './serializer/index.js';\nexport { ERR as ErrorCodes } from './common/error-codes.js';\n/** @internal */\nexport * as foreignContent from './common/foreign-content.js';\nexport * as html from './common/html.js';\nexport * as Token from './common/token.js';\n/** @internal */\nexport { Tokenizer, TokenizerMode } from './tokenizer/index.js';\n// Shorthands\n/**\n * Parses an HTML string.\n *\n * @param html Input HTML string.\n * @param options Parsing options.\n * @returns Document\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * console.log(document.childNodes[1].tagName); //> 'html'\n *```\n */\nexport function parse(html, options) {\n    return Parser.parse(html, options);\n}\nexport function parseFragment(fragmentContext, html, options) {\n    if (typeof fragmentContext === 'string') {\n        options = html;\n        html = fragmentContext;\n        fragmentContext = null;\n    }\n    const parser = Parser.getFragmentParser(fragmentContext, options);\n    parser.tokenizer.write(html, true);\n    return parser.getFragment();\n}\n","import { html } from 'parse5';\nimport { Element, Document, ProcessingInstruction, Comment, Text, isDirective, isText, isComment, isTag, } from 'domhandler';\nfunction enquoteDoctypeId(id) {\n    const quote = id.includes('\"') ? \"'\" : '\"';\n    return quote + id + quote;\n}\n/** @internal */\nexport function serializeDoctypeContent(name, publicId, systemId) {\n    let str = '!DOCTYPE ';\n    if (name) {\n        str += name;\n    }\n    if (publicId) {\n        str += ` PUBLIC ${enquoteDoctypeId(publicId)}`;\n    }\n    else if (systemId) {\n        str += ' SYSTEM';\n    }\n    if (systemId) {\n        str += ` ${enquoteDoctypeId(systemId)}`;\n    }\n    return str;\n}\nexport const adapter = {\n    // Re-exports from domhandler\n    isCommentNode: isComment,\n    isElementNode: isTag,\n    isTextNode: isText,\n    //Node construction\n    createDocument() {\n        const node = new Document([]);\n        node['x-mode'] = html.DOCUMENT_MODE.NO_QUIRKS;\n        return node;\n    },\n    createDocumentFragment() {\n        return new Document([]);\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        const attribs = Object.create(null);\n        const attribsNamespace = Object.create(null);\n        const attribsPrefix = Object.create(null);\n        for (let i = 0; i < attrs.length; i++) {\n            const attrName = attrs[i].name;\n            attribs[attrName] = attrs[i].value;\n            attribsNamespace[attrName] = attrs[i].namespace;\n            attribsPrefix[attrName] = attrs[i].prefix;\n        }\n        const node = new Element(tagName, attribs, []);\n        node.namespace = namespaceURI;\n        node['x-attribsNamespace'] = attribsNamespace;\n        node['x-attribsPrefix'] = attribsPrefix;\n        return node;\n    },\n    createCommentNode(data) {\n        return new Comment(data);\n    },\n    createTextNode(value) {\n        return new Text(value);\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        const prev = parentNode.children[parentNode.children.length - 1];\n        if (prev) {\n            prev.next = newNode;\n            newNode.prev = prev;\n        }\n        parentNode.children.push(newNode);\n        newNode.parent = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.children.indexOf(referenceNode);\n        const { prev } = referenceNode;\n        if (prev) {\n            prev.next = newNode;\n            newNode.prev = prev;\n        }\n        referenceNode.prev = newNode;\n        newNode.next = referenceNode;\n        parentNode.children.splice(insertionIdx, 0, newNode);\n        newNode.parent = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        adapter.appendChild(templateElement, contentElement);\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.children[0];\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const data = serializeDoctypeContent(name, publicId, systemId);\n        let doctypeNode = document.children.find((node) => isDirective(node) && node.name === '!doctype');\n        if (doctypeNode) {\n            doctypeNode.data = data !== null && data !== void 0 ? data : null;\n        }\n        else {\n            doctypeNode = new ProcessingInstruction('!doctype', data);\n            adapter.appendChild(document, doctypeNode);\n        }\n        doctypeNode['x-name'] = name;\n        doctypeNode['x-publicId'] = publicId;\n        doctypeNode['x-systemId'] = systemId;\n    },\n    setDocumentMode(document, mode) {\n        document['x-mode'] = mode;\n    },\n    getDocumentMode(document) {\n        return document['x-mode'];\n    },\n    detachNode(node) {\n        if (node.parent) {\n            const idx = node.parent.children.indexOf(node);\n            const { prev, next } = node;\n            node.prev = null;\n            node.next = null;\n            if (prev) {\n                prev.next = next;\n            }\n            if (next) {\n                next.prev = prev;\n            }\n            node.parent.children.splice(idx, 1);\n            node.parent = null;\n        }\n    },\n    insertText(parentNode, text) {\n        const lastChild = parentNode.children[parentNode.children.length - 1];\n        if (lastChild && isText(lastChild)) {\n            lastChild.data += text;\n        }\n        else {\n            adapter.appendChild(parentNode, adapter.createTextNode(text));\n        }\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.children[parentNode.children.indexOf(referenceNode) - 1];\n        if (prevNode && isText(prevNode)) {\n            prevNode.data += text;\n        }\n        else {\n            adapter.insertBefore(parentNode, adapter.createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        for (let i = 0; i < attrs.length; i++) {\n            const attrName = attrs[i].name;\n            if (recipient.attribs[attrName] === undefined) {\n                recipient.attribs[attrName] = attrs[i].value;\n                recipient['x-attribsNamespace'][attrName] = attrs[i].namespace;\n                recipient['x-attribsPrefix'][attrName] = attrs[i].prefix;\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.children[0];\n    },\n    getChildNodes(node) {\n        return node.children;\n    },\n    getParentNode(node) {\n        return node.parent;\n    },\n    getAttrList(element) {\n        return element.attributes;\n    },\n    //Node data\n    getTagName(element) {\n        return element.name;\n    },\n    getNamespaceURI(element) {\n        return element.namespace;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.data;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-name']) !== null && _a !== void 0 ? _a : '';\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-publicId']) !== null && _a !== void 0 ? _a : '';\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-systemId']) !== null && _a !== void 0 ? _a : '';\n    },\n    //Node types\n    isDocumentTypeNode(node) {\n        return isDirective(node) && node.name === '!doctype';\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        if (location) {\n            node.startIndex = location.startOffset;\n            node.endIndex = location.endOffset;\n        }\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        if (endLocation.endOffset != null)\n            node.endIndex = endLocation.endOffset;\n        node.sourceCodeLocation = {\n            ...node.sourceCodeLocation,\n            ...endLocation,\n        };\n    },\n};\n","import { isDocument, } from 'domhandler';\nimport { parse as parseDocument, parseFragment, serializeOuter } from 'parse5';\nimport { adapter as htmlparser2Adapter } from 'parse5-htmlparser2-tree-adapter';\n/**\n * Parse the content with `parse5` in the context of the given `ParentNode`.\n *\n * @param content - The content to parse.\n * @param options - A set of options to use to parse.\n * @param isDocument - Whether to parse the content as a full HTML document.\n * @param context - The context in which to parse the content.\n * @returns The parsed content.\n */\nexport function parseWithParse5(content, options, isDocument, context) {\n    var _a;\n    (_a = options.treeAdapter) !== null && _a !== void 0 ? _a : (options.treeAdapter = htmlparser2Adapter);\n    if (options.scriptingEnabled !== false) {\n        options.scriptingEnabled = true;\n    }\n    return isDocument\n        ? parseDocument(content, options)\n        : parseFragment(context, content, options);\n}\nconst renderOpts = { treeAdapter: htmlparser2Adapter };\n/**\n * Renders the given DOM tree with `parse5` and returns the result as a string.\n *\n * @param dom - The DOM tree to render.\n * @returns The rendered document.\n */\nexport function renderWithParse5(dom) {\n    /*\n     * `dom-serializer` passes over the special \"root\" node and renders the\n     * node's children in its place. To mimic this behavior with `parse5`, an\n     * equivalent operation must be applied to the input array.\n     */\n    const nodes = 'length' in dom ? dom : [dom];\n    for (let index = 0; index < nodes.length; index += 1) {\n        const node = nodes[index];\n        if (isDocument(node)) {\n            Array.prototype.splice.call(nodes, index, 1, ...node.children);\n        }\n    }\n    let result = '';\n    for (let index = 0; index < nodes.length; index += 1) {\n        const node = nodes[index];\n        result += serializeOuter(node, renderOpts);\n    }\n    return result;\n}\n//# sourceMappingURL=parse5-adapter.js.map","import { EntityDecoder, DecodingMode, htmlDecodeTree, xmlDecodeTree, } from \"entities/lib/decode.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"Tab\"] = 9] = \"Tab\";\n    CharCodes[CharCodes[\"NewLine\"] = 10] = \"NewLine\";\n    CharCodes[CharCodes[\"FormFeed\"] = 12] = \"FormFeed\";\n    CharCodes[CharCodes[\"CarriageReturn\"] = 13] = \"CarriageReturn\";\n    CharCodes[CharCodes[\"Space\"] = 32] = \"Space\";\n    CharCodes[CharCodes[\"ExclamationMark\"] = 33] = \"ExclamationMark\";\n    CharCodes[CharCodes[\"Number\"] = 35] = \"Number\";\n    CharCodes[CharCodes[\"Amp\"] = 38] = \"Amp\";\n    CharCodes[CharCodes[\"SingleQuote\"] = 39] = \"SingleQuote\";\n    CharCodes[CharCodes[\"DoubleQuote\"] = 34] = \"DoubleQuote\";\n    CharCodes[CharCodes[\"Dash\"] = 45] = \"Dash\";\n    CharCodes[CharCodes[\"Slash\"] = 47] = \"Slash\";\n    CharCodes[CharCodes[\"Zero\"] = 48] = \"Zero\";\n    CharCodes[CharCodes[\"Nine\"] = 57] = \"Nine\";\n    CharCodes[CharCodes[\"Semi\"] = 59] = \"Semi\";\n    CharCodes[CharCodes[\"Lt\"] = 60] = \"Lt\";\n    CharCodes[CharCodes[\"Eq\"] = 61] = \"Eq\";\n    CharCodes[CharCodes[\"Gt\"] = 62] = \"Gt\";\n    CharCodes[CharCodes[\"Questionmark\"] = 63] = \"Questionmark\";\n    CharCodes[CharCodes[\"UpperA\"] = 65] = \"UpperA\";\n    CharCodes[CharCodes[\"LowerA\"] = 97] = \"LowerA\";\n    CharCodes[CharCodes[\"UpperF\"] = 70] = \"UpperF\";\n    CharCodes[CharCodes[\"LowerF\"] = 102] = \"LowerF\";\n    CharCodes[CharCodes[\"UpperZ\"] = 90] = \"UpperZ\";\n    CharCodes[CharCodes[\"LowerZ\"] = 122] = \"LowerZ\";\n    CharCodes[CharCodes[\"LowerX\"] = 120] = \"LowerX\";\n    CharCodes[CharCodes[\"OpeningSquareBracket\"] = 91] = \"OpeningSquareBracket\";\n})(CharCodes || (CharCodes = {}));\n/** All the states the tokenizer can be in. */\nvar State;\n(function (State) {\n    State[State[\"Text\"] = 1] = \"Text\";\n    State[State[\"BeforeTagName\"] = 2] = \"BeforeTagName\";\n    State[State[\"InTagName\"] = 3] = \"InTagName\";\n    State[State[\"InSelfClosingTag\"] = 4] = \"InSelfClosingTag\";\n    State[State[\"BeforeClosingTagName\"] = 5] = \"BeforeClosingTagName\";\n    State[State[\"InClosingTagName\"] = 6] = \"InClosingTagName\";\n    State[State[\"AfterClosingTagName\"] = 7] = \"AfterClosingTagName\";\n    // Attributes\n    State[State[\"BeforeAttributeName\"] = 8] = \"BeforeAttributeName\";\n    State[State[\"InAttributeName\"] = 9] = \"InAttributeName\";\n    State[State[\"AfterAttributeName\"] = 10] = \"AfterAttributeName\";\n    State[State[\"BeforeAttributeValue\"] = 11] = \"BeforeAttributeValue\";\n    State[State[\"InAttributeValueDq\"] = 12] = \"InAttributeValueDq\";\n    State[State[\"InAttributeValueSq\"] = 13] = \"InAttributeValueSq\";\n    State[State[\"InAttributeValueNq\"] = 14] = \"InAttributeValueNq\";\n    // Declarations\n    State[State[\"BeforeDeclaration\"] = 15] = \"BeforeDeclaration\";\n    State[State[\"InDeclaration\"] = 16] = \"InDeclaration\";\n    // Processing instructions\n    State[State[\"InProcessingInstruction\"] = 17] = \"InProcessingInstruction\";\n    // Comments & CDATA\n    State[State[\"BeforeComment\"] = 18] = \"BeforeComment\";\n    State[State[\"CDATASequence\"] = 19] = \"CDATASequence\";\n    State[State[\"InSpecialComment\"] = 20] = \"InSpecialComment\";\n    State[State[\"InCommentLike\"] = 21] = \"InCommentLike\";\n    // Special tags\n    State[State[\"BeforeSpecialS\"] = 22] = \"BeforeSpecialS\";\n    State[State[\"BeforeSpecialT\"] = 23] = \"BeforeSpecialT\";\n    State[State[\"SpecialStartSequence\"] = 24] = \"SpecialStartSequence\";\n    State[State[\"InSpecialTag\"] = 25] = \"InSpecialTag\";\n    State[State[\"InEntity\"] = 26] = \"InEntity\";\n})(State || (State = {}));\nfunction isWhitespace(c) {\n    return (c === CharCodes.Space ||\n        c === CharCodes.NewLine ||\n        c === CharCodes.Tab ||\n        c === CharCodes.FormFeed ||\n        c === CharCodes.CarriageReturn);\n}\nfunction isEndOfTagSection(c) {\n    return c === CharCodes.Slash || c === CharCodes.Gt || isWhitespace(c);\n}\nfunction isASCIIAlpha(c) {\n    return ((c >= CharCodes.LowerA && c <= CharCodes.LowerZ) ||\n        (c >= CharCodes.UpperA && c <= CharCodes.UpperZ));\n}\nexport var QuoteType;\n(function (QuoteType) {\n    QuoteType[QuoteType[\"NoValue\"] = 0] = \"NoValue\";\n    QuoteType[QuoteType[\"Unquoted\"] = 1] = \"Unquoted\";\n    QuoteType[QuoteType[\"Single\"] = 2] = \"Single\";\n    QuoteType[QuoteType[\"Double\"] = 3] = \"Double\";\n})(QuoteType || (QuoteType = {}));\n/**\n * Sequences used to match longer strings.\n *\n * We don't have `Script`, `Style`, or `Title` here. Instead, we re-use the *End\n * sequences with an increased offset.\n */\nconst Sequences = {\n    Cdata: new Uint8Array([0x43, 0x44, 0x41, 0x54, 0x41, 0x5b]), // CDATA[\n    CdataEnd: new Uint8Array([0x5d, 0x5d, 0x3e]), // ]]>\n    CommentEnd: new Uint8Array([0x2d, 0x2d, 0x3e]), // `-->`\n    ScriptEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74]), // `</script`\n    StyleEnd: new Uint8Array([0x3c, 0x2f, 0x73, 0x74, 0x79, 0x6c, 0x65]), // `</style`\n    TitleEnd: new Uint8Array([0x3c, 0x2f, 0x74, 0x69, 0x74, 0x6c, 0x65]), // `</title`\n    TextareaEnd: new Uint8Array([\n        0x3c, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x61, 0x72, 0x65, 0x61,\n    ]), // `</textarea`\n};\nexport default class Tokenizer {\n    constructor({ xmlMode = false, decodeEntities = true, }, cbs) {\n        this.cbs = cbs;\n        /** The current state the tokenizer is in. */\n        this.state = State.Text;\n        /** The read buffer. */\n        this.buffer = \"\";\n        /** The beginning of the section that is currently being read. */\n        this.sectionStart = 0;\n        /** The index within the buffer that we are currently looking at. */\n        this.index = 0;\n        /** The start of the last entity. */\n        this.entityStart = 0;\n        /** Some behavior, eg. when decoding entities, is done while we are in another state. This keeps track of the other state type. */\n        this.baseState = State.Text;\n        /** For special parsing behavior inside of script and style tags. */\n        this.isSpecial = false;\n        /** Indicates whether the tokenizer has been paused. */\n        this.running = true;\n        /** The offset of the current buffer. */\n        this.offset = 0;\n        this.currentSequence = undefined;\n        this.sequenceIndex = 0;\n        this.xmlMode = xmlMode;\n        this.decodeEntities = decodeEntities;\n        this.entityDecoder = new EntityDecoder(xmlMode ? xmlDecodeTree : htmlDecodeTree, (cp, consumed) => this.emitCodePoint(cp, consumed));\n    }\n    reset() {\n        this.state = State.Text;\n        this.buffer = \"\";\n        this.sectionStart = 0;\n        this.index = 0;\n        this.baseState = State.Text;\n        this.currentSequence = undefined;\n        this.running = true;\n        this.offset = 0;\n    }\n    write(chunk) {\n        this.offset += this.buffer.length;\n        this.buffer = chunk;\n        this.parse();\n    }\n    end() {\n        if (this.running)\n            this.finish();\n    }\n    pause() {\n        this.running = false;\n    }\n    resume() {\n        this.running = true;\n        if (this.index < this.buffer.length + this.offset) {\n            this.parse();\n        }\n    }\n    stateText(c) {\n        if (c === CharCodes.Lt ||\n            (!this.decodeEntities && this.fastForwardTo(CharCodes.Lt))) {\n            if (this.index > this.sectionStart) {\n                this.cbs.ontext(this.sectionStart, this.index);\n            }\n            this.state = State.BeforeTagName;\n            this.sectionStart = this.index;\n        }\n        else if (this.decodeEntities && c === CharCodes.Amp) {\n            this.startEntity();\n        }\n    }\n    stateSpecialStartSequence(c) {\n        const isEnd = this.sequenceIndex === this.currentSequence.length;\n        const isMatch = isEnd\n            ? // If we are at the end of the sequence, make sure the tag name has ended\n                isEndOfTagSection(c)\n            : // Otherwise, do a case-insensitive comparison\n                (c | 0x20) === this.currentSequence[this.sequenceIndex];\n        if (!isMatch) {\n            this.isSpecial = false;\n        }\n        else if (!isEnd) {\n            this.sequenceIndex++;\n            return;\n        }\n        this.sequenceIndex = 0;\n        this.state = State.InTagName;\n        this.stateInTagName(c);\n    }\n    /** Look for an end tag. For <title> tags, also decode entities. */\n    stateInSpecialTag(c) {\n        if (this.sequenceIndex === this.currentSequence.length) {\n            if (c === CharCodes.Gt || isWhitespace(c)) {\n                const endOfText = this.index - this.currentSequence.length;\n                if (this.sectionStart < endOfText) {\n                    // Spoof the index so that reported locations match up.\n                    const actualIndex = this.index;\n                    this.index = endOfText;\n                    this.cbs.ontext(this.sectionStart, endOfText);\n                    this.index = actualIndex;\n                }\n                this.isSpecial = false;\n                this.sectionStart = endOfText + 2; // Skip over the `</`\n                this.stateInClosingTagName(c);\n                return; // We are done; skip the rest of the function.\n            }\n            this.sequenceIndex = 0;\n        }\n        if ((c | 0x20) === this.currentSequence[this.sequenceIndex]) {\n            this.sequenceIndex += 1;\n        }\n        else if (this.sequenceIndex === 0) {\n            if (this.currentSequence === Sequences.TitleEnd) {\n                // We have to parse entities in <title> tags.\n                if (this.decodeEntities && c === CharCodes.Amp) {\n                    this.startEntity();\n                }\n            }\n            else if (this.fastForwardTo(CharCodes.Lt)) {\n                // Outside of <title> tags, we can fast-forward.\n                this.sequenceIndex = 1;\n            }\n        }\n        else {\n            // If we see a `<`, set the sequence index to 1; useful for eg. `<</script>`.\n            this.sequenceIndex = Number(c === CharCodes.Lt);\n        }\n    }\n    stateCDATASequence(c) {\n        if (c === Sequences.Cdata[this.sequenceIndex]) {\n            if (++this.sequenceIndex === Sequences.Cdata.length) {\n                this.state = State.InCommentLike;\n                this.currentSequence = Sequences.CdataEnd;\n                this.sequenceIndex = 0;\n                this.sectionStart = this.index + 1;\n            }\n        }\n        else {\n            this.sequenceIndex = 0;\n            this.state = State.InDeclaration;\n            this.stateInDeclaration(c); // Reconsume the character\n        }\n    }\n    /**\n     * When we wait for one specific character, we can speed things up\n     * by skipping through the buffer until we find it.\n     *\n     * @returns Whether the character was found.\n     */\n    fastForwardTo(c) {\n        while (++this.index < this.buffer.length + this.offset) {\n            if (this.buffer.charCodeAt(this.index - this.offset) === c) {\n                return true;\n            }\n        }\n        /*\n         * We increment the index at the end of the `parse` loop,\n         * so set it to `buffer.length - 1` here.\n         *\n         * TODO: Refactor `parse` to increment index before calling states.\n         */\n        this.index = this.buffer.length + this.offset - 1;\n        return false;\n    }\n    /**\n     * Comments and CDATA end with `-->` and `]]>`.\n     *\n     * Their common qualities are:\n     * - Their end sequences have a distinct character they start with.\n     * - That character is then repeated, so we have to check multiple repeats.\n     * - All characters but the start character of the sequence can be skipped.\n     */\n    stateInCommentLike(c) {\n        if (c === this.currentSequence[this.sequenceIndex]) {\n            if (++this.sequenceIndex === this.currentSequence.length) {\n                if (this.currentSequence === Sequences.CdataEnd) {\n                    this.cbs.oncdata(this.sectionStart, this.index, 2);\n                }\n                else {\n                    this.cbs.oncomment(this.sectionStart, this.index, 2);\n                }\n                this.sequenceIndex = 0;\n                this.sectionStart = this.index + 1;\n                this.state = State.Text;\n            }\n        }\n        else if (this.sequenceIndex === 0) {\n            // Fast-forward to the first character of the sequence\n            if (this.fastForwardTo(this.currentSequence[0])) {\n                this.sequenceIndex = 1;\n            }\n        }\n        else if (c !== this.currentSequence[this.sequenceIndex - 1]) {\n            // Allow long sequences, eg. --->, ]]]>\n            this.sequenceIndex = 0;\n        }\n    }\n    /**\n     * HTML only allows ASCII alpha characters (a-z and A-Z) at the beginning of a tag name.\n     *\n     * XML allows a lot more characters here (@see https://www.w3.org/TR/REC-xml/#NT-NameStartChar).\n     * We allow anything that wouldn't end the tag.\n     */\n    isTagStartChar(c) {\n        return this.xmlMode ? !isEndOfTagSection(c) : isASCIIAlpha(c);\n    }\n    startSpecial(sequence, offset) {\n        this.isSpecial = true;\n        this.currentSequence = sequence;\n        this.sequenceIndex = offset;\n        this.state = State.SpecialStartSequence;\n    }\n    stateBeforeTagName(c) {\n        if (c === CharCodes.ExclamationMark) {\n            this.state = State.BeforeDeclaration;\n            this.sectionStart = this.index + 1;\n        }\n        else if (c === CharCodes.Questionmark) {\n            this.state = State.InProcessingInstruction;\n            this.sectionStart = this.index + 1;\n        }\n        else if (this.isTagStartChar(c)) {\n            const lower = c | 0x20;\n            this.sectionStart = this.index;\n            if (this.xmlMode) {\n                this.state = State.InTagName;\n            }\n            else if (lower === Sequences.ScriptEnd[2]) {\n                this.state = State.BeforeSpecialS;\n            }\n            else if (lower === Sequences.TitleEnd[2]) {\n                this.state = State.BeforeSpecialT;\n            }\n            else {\n                this.state = State.InTagName;\n            }\n        }\n        else if (c === CharCodes.Slash) {\n            this.state = State.BeforeClosingTagName;\n        }\n        else {\n            this.state = State.Text;\n            this.stateText(c);\n        }\n    }\n    stateInTagName(c) {\n        if (isEndOfTagSection(c)) {\n            this.cbs.onopentagname(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n    }\n    stateBeforeClosingTagName(c) {\n        if (isWhitespace(c)) {\n            // Ignore\n        }\n        else if (c === CharCodes.Gt) {\n            this.state = State.Text;\n        }\n        else {\n            this.state = this.isTagStartChar(c)\n                ? State.InClosingTagName\n                : State.InSpecialComment;\n            this.sectionStart = this.index;\n        }\n    }\n    stateInClosingTagName(c) {\n        if (c === CharCodes.Gt || isWhitespace(c)) {\n            this.cbs.onclosetag(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.state = State.AfterClosingTagName;\n            this.stateAfterClosingTagName(c);\n        }\n    }\n    stateAfterClosingTagName(c) {\n        // Skip everything until \">\"\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeAttributeName(c) {\n        if (c === CharCodes.Gt) {\n            this.cbs.onopentagend(this.index);\n            if (this.isSpecial) {\n                this.state = State.InSpecialTag;\n                this.sequenceIndex = 0;\n            }\n            else {\n                this.state = State.Text;\n            }\n            this.sectionStart = this.index + 1;\n        }\n        else if (c === CharCodes.Slash) {\n            this.state = State.InSelfClosingTag;\n        }\n        else if (!isWhitespace(c)) {\n            this.state = State.InAttributeName;\n            this.sectionStart = this.index;\n        }\n    }\n    stateInSelfClosingTag(c) {\n        if (c === CharCodes.Gt) {\n            this.cbs.onselfclosingtag(this.index);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n            this.isSpecial = false; // Reset special state, in case of self-closing special tags\n        }\n        else if (!isWhitespace(c)) {\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n    }\n    stateInAttributeName(c) {\n        if (c === CharCodes.Eq || isEndOfTagSection(c)) {\n            this.cbs.onattribname(this.sectionStart, this.index);\n            this.sectionStart = this.index;\n            this.state = State.AfterAttributeName;\n            this.stateAfterAttributeName(c);\n        }\n    }\n    stateAfterAttributeName(c) {\n        if (c === CharCodes.Eq) {\n            this.state = State.BeforeAttributeValue;\n        }\n        else if (c === CharCodes.Slash || c === CharCodes.Gt) {\n            this.cbs.onattribend(QuoteType.NoValue, this.sectionStart);\n            this.sectionStart = -1;\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n        else if (!isWhitespace(c)) {\n            this.cbs.onattribend(QuoteType.NoValue, this.sectionStart);\n            this.state = State.InAttributeName;\n            this.sectionStart = this.index;\n        }\n    }\n    stateBeforeAttributeValue(c) {\n        if (c === CharCodes.DoubleQuote) {\n            this.state = State.InAttributeValueDq;\n            this.sectionStart = this.index + 1;\n        }\n        else if (c === CharCodes.SingleQuote) {\n            this.state = State.InAttributeValueSq;\n            this.sectionStart = this.index + 1;\n        }\n        else if (!isWhitespace(c)) {\n            this.sectionStart = this.index;\n            this.state = State.InAttributeValueNq;\n            this.stateInAttributeValueNoQuotes(c); // Reconsume token\n        }\n    }\n    handleInAttributeValue(c, quote) {\n        if (c === quote ||\n            (!this.decodeEntities && this.fastForwardTo(quote))) {\n            this.cbs.onattribdata(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.cbs.onattribend(quote === CharCodes.DoubleQuote\n                ? QuoteType.Double\n                : QuoteType.Single, this.index + 1);\n            this.state = State.BeforeAttributeName;\n        }\n        else if (this.decodeEntities && c === CharCodes.Amp) {\n            this.startEntity();\n        }\n    }\n    stateInAttributeValueDoubleQuotes(c) {\n        this.handleInAttributeValue(c, CharCodes.DoubleQuote);\n    }\n    stateInAttributeValueSingleQuotes(c) {\n        this.handleInAttributeValue(c, CharCodes.SingleQuote);\n    }\n    stateInAttributeValueNoQuotes(c) {\n        if (isWhitespace(c) || c === CharCodes.Gt) {\n            this.cbs.onattribdata(this.sectionStart, this.index);\n            this.sectionStart = -1;\n            this.cbs.onattribend(QuoteType.Unquoted, this.index);\n            this.state = State.BeforeAttributeName;\n            this.stateBeforeAttributeName(c);\n        }\n        else if (this.decodeEntities && c === CharCodes.Amp) {\n            this.startEntity();\n        }\n    }\n    stateBeforeDeclaration(c) {\n        if (c === CharCodes.OpeningSquareBracket) {\n            this.state = State.CDATASequence;\n            this.sequenceIndex = 0;\n        }\n        else {\n            this.state =\n                c === CharCodes.Dash\n                    ? State.BeforeComment\n                    : State.InDeclaration;\n        }\n    }\n    stateInDeclaration(c) {\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.cbs.ondeclaration(this.sectionStart, this.index);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateInProcessingInstruction(c) {\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.cbs.onprocessinginstruction(this.sectionStart, this.index);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeComment(c) {\n        if (c === CharCodes.Dash) {\n            this.state = State.InCommentLike;\n            this.currentSequence = Sequences.CommentEnd;\n            // Allow short comments (eg. <!-->)\n            this.sequenceIndex = 2;\n            this.sectionStart = this.index + 1;\n        }\n        else {\n            this.state = State.InDeclaration;\n        }\n    }\n    stateInSpecialComment(c) {\n        if (c === CharCodes.Gt || this.fastForwardTo(CharCodes.Gt)) {\n            this.cbs.oncomment(this.sectionStart, this.index, 0);\n            this.state = State.Text;\n            this.sectionStart = this.index + 1;\n        }\n    }\n    stateBeforeSpecialS(c) {\n        const lower = c | 0x20;\n        if (lower === Sequences.ScriptEnd[3]) {\n            this.startSpecial(Sequences.ScriptEnd, 4);\n        }\n        else if (lower === Sequences.StyleEnd[3]) {\n            this.startSpecial(Sequences.StyleEnd, 4);\n        }\n        else {\n            this.state = State.InTagName;\n            this.stateInTagName(c); // Consume the token again\n        }\n    }\n    stateBeforeSpecialT(c) {\n        const lower = c | 0x20;\n        if (lower === Sequences.TitleEnd[3]) {\n            this.startSpecial(Sequences.TitleEnd, 4);\n        }\n        else if (lower === Sequences.TextareaEnd[3]) {\n            this.startSpecial(Sequences.TextareaEnd, 4);\n        }\n        else {\n            this.state = State.InTagName;\n            this.stateInTagName(c); // Consume the token again\n        }\n    }\n    startEntity() {\n        this.baseState = this.state;\n        this.state = State.InEntity;\n        this.entityStart = this.index;\n        this.entityDecoder.startEntity(this.xmlMode\n            ? DecodingMode.Strict\n            : this.baseState === State.Text ||\n                this.baseState === State.InSpecialTag\n                ? DecodingMode.Legacy\n                : DecodingMode.Attribute);\n    }\n    stateInEntity() {\n        const length = this.entityDecoder.write(this.buffer, this.index - this.offset);\n        // If `length` is positive, we are done with the entity.\n        if (length >= 0) {\n            this.state = this.baseState;\n            if (length === 0) {\n                this.index = this.entityStart;\n            }\n        }\n        else {\n            // Mark buffer as consumed.\n            this.index = this.offset + this.buffer.length - 1;\n        }\n    }\n    /**\n     * Remove data that has already been consumed from the buffer.\n     */\n    cleanup() {\n        // If we are inside of text or attributes, emit what we already have.\n        if (this.running && this.sectionStart !== this.index) {\n            if (this.state === State.Text ||\n                (this.state === State.InSpecialTag && this.sequenceIndex === 0)) {\n                this.cbs.ontext(this.sectionStart, this.index);\n                this.sectionStart = this.index;\n            }\n            else if (this.state === State.InAttributeValueDq ||\n                this.state === State.InAttributeValueSq ||\n                this.state === State.InAttributeValueNq) {\n                this.cbs.onattribdata(this.sectionStart, this.index);\n                this.sectionStart = this.index;\n            }\n        }\n    }\n    shouldContinue() {\n        return this.index < this.buffer.length + this.offset && this.running;\n    }\n    /**\n     * Iterates through the buffer, calling the function corresponding to the current state.\n     *\n     * States that are more likely to be hit are higher up, as a performance improvement.\n     */\n    parse() {\n        while (this.shouldContinue()) {\n            const c = this.buffer.charCodeAt(this.index - this.offset);\n            switch (this.state) {\n                case State.Text: {\n                    this.stateText(c);\n                    break;\n                }\n                case State.SpecialStartSequence: {\n                    this.stateSpecialStartSequence(c);\n                    break;\n                }\n                case State.InSpecialTag: {\n                    this.stateInSpecialTag(c);\n                    break;\n                }\n                case State.CDATASequence: {\n                    this.stateCDATASequence(c);\n                    break;\n                }\n                case State.InAttributeValueDq: {\n                    this.stateInAttributeValueDoubleQuotes(c);\n                    break;\n                }\n                case State.InAttributeName: {\n                    this.stateInAttributeName(c);\n                    break;\n                }\n                case State.InCommentLike: {\n                    this.stateInCommentLike(c);\n                    break;\n                }\n                case State.InSpecialComment: {\n                    this.stateInSpecialComment(c);\n                    break;\n                }\n                case State.BeforeAttributeName: {\n                    this.stateBeforeAttributeName(c);\n                    break;\n                }\n                case State.InTagName: {\n                    this.stateInTagName(c);\n                    break;\n                }\n                case State.InClosingTagName: {\n                    this.stateInClosingTagName(c);\n                    break;\n                }\n                case State.BeforeTagName: {\n                    this.stateBeforeTagName(c);\n                    break;\n                }\n                case State.AfterAttributeName: {\n                    this.stateAfterAttributeName(c);\n                    break;\n                }\n                case State.InAttributeValueSq: {\n                    this.stateInAttributeValueSingleQuotes(c);\n                    break;\n                }\n                case State.BeforeAttributeValue: {\n                    this.stateBeforeAttributeValue(c);\n                    break;\n                }\n                case State.BeforeClosingTagName: {\n                    this.stateBeforeClosingTagName(c);\n                    break;\n                }\n                case State.AfterClosingTagName: {\n                    this.stateAfterClosingTagName(c);\n                    break;\n                }\n                case State.BeforeSpecialS: {\n                    this.stateBeforeSpecialS(c);\n                    break;\n                }\n                case State.BeforeSpecialT: {\n                    this.stateBeforeSpecialT(c);\n                    break;\n                }\n                case State.InAttributeValueNq: {\n                    this.stateInAttributeValueNoQuotes(c);\n                    break;\n                }\n                case State.InSelfClosingTag: {\n                    this.stateInSelfClosingTag(c);\n                    break;\n                }\n                case State.InDeclaration: {\n                    this.stateInDeclaration(c);\n                    break;\n                }\n                case State.BeforeDeclaration: {\n                    this.stateBeforeDeclaration(c);\n                    break;\n                }\n                case State.BeforeComment: {\n                    this.stateBeforeComment(c);\n                    break;\n                }\n                case State.InProcessingInstruction: {\n                    this.stateInProcessingInstruction(c);\n                    break;\n                }\n                case State.InEntity: {\n                    this.stateInEntity();\n                    break;\n                }\n            }\n            this.index++;\n        }\n        this.cleanup();\n    }\n    finish() {\n        if (this.state === State.InEntity) {\n            this.entityDecoder.end();\n            this.state = this.baseState;\n        }\n        this.handleTrailingData();\n        this.cbs.onend();\n    }\n    /** Handle any trailing data. */\n    handleTrailingData() {\n        const endIndex = this.buffer.length + this.offset;\n        // If there is no remaining data, we are done.\n        if (this.sectionStart >= endIndex) {\n            return;\n        }\n        if (this.state === State.InCommentLike) {\n            if (this.currentSequence === Sequences.CdataEnd) {\n                this.cbs.oncdata(this.sectionStart, endIndex, 0);\n            }\n            else {\n                this.cbs.oncomment(this.sectionStart, endIndex, 0);\n            }\n        }\n        else if (this.state === State.InTagName ||\n            this.state === State.BeforeAttributeName ||\n            this.state === State.BeforeAttributeValue ||\n            this.state === State.AfterAttributeName ||\n            this.state === State.InAttributeName ||\n            this.state === State.InAttributeValueSq ||\n            this.state === State.InAttributeValueDq ||\n            this.state === State.InAttributeValueNq ||\n            this.state === State.InClosingTagName) {\n            /*\n             * If we are currently in an opening or closing tag, us not calling the\n             * respective callback signals that the tag should be ignored.\n             */\n        }\n        else {\n            this.cbs.ontext(this.sectionStart, endIndex);\n        }\n    }\n    emitCodePoint(cp, consumed) {\n        if (this.baseState !== State.Text &&\n            this.baseState !== State.InSpecialTag) {\n            if (this.sectionStart < this.entityStart) {\n                this.cbs.onattribdata(this.sectionStart, this.entityStart);\n            }\n            this.sectionStart = this.entityStart + consumed;\n            this.index = this.sectionStart - 1;\n            this.cbs.onattribentity(cp);\n        }\n        else {\n            if (this.sectionStart < this.entityStart) {\n                this.cbs.ontext(this.sectionStart, this.entityStart);\n            }\n            this.sectionStart = this.entityStart + consumed;\n            this.index = this.sectionStart - 1;\n            this.cbs.ontextentity(cp, this.sectionStart);\n        }\n    }\n}\n//# sourceMappingURL=Tokenizer.js.map","import Tokenizer, { QuoteType } from \"./Tokenizer.js\";\nimport { fromCodePoint } from \"entities/lib/decode.js\";\nconst formTags = new Set([\n    \"input\",\n    \"option\",\n    \"optgroup\",\n    \"select\",\n    \"button\",\n    \"datalist\",\n    \"textarea\",\n]);\nconst pTag = new Set([\"p\"]);\nconst tableSectionTags = new Set([\"thead\", \"tbody\"]);\nconst ddtTags = new Set([\"dd\", \"dt\"]);\nconst rtpTags = new Set([\"rt\", \"rp\"]);\nconst openImpliesClose = new Map([\n    [\"tr\", new Set([\"tr\", \"th\", \"td\"])],\n    [\"th\", new Set([\"th\"])],\n    [\"td\", new Set([\"thead\", \"th\", \"td\"])],\n    [\"body\", new Set([\"head\", \"link\", \"script\"])],\n    [\"li\", new Set([\"li\"])],\n    [\"p\", pTag],\n    [\"h1\", pTag],\n    [\"h2\", pTag],\n    [\"h3\", pTag],\n    [\"h4\", pTag],\n    [\"h5\", pTag],\n    [\"h6\", pTag],\n    [\"select\", formTags],\n    [\"input\", formTags],\n    [\"output\", formTags],\n    [\"button\", formTags],\n    [\"datalist\", formTags],\n    [\"textarea\", formTags],\n    [\"option\", new Set([\"option\"])],\n    [\"optgroup\", new Set([\"optgroup\", \"option\"])],\n    [\"dd\", ddtTags],\n    [\"dt\", ddtTags],\n    [\"address\", pTag],\n    [\"article\", pTag],\n    [\"aside\", pTag],\n    [\"blockquote\", pTag],\n    [\"details\", pTag],\n    [\"div\", pTag],\n    [\"dl\", pTag],\n    [\"fieldset\", pTag],\n    [\"figcaption\", pTag],\n    [\"figure\", pTag],\n    [\"footer\", pTag],\n    [\"form\", pTag],\n    [\"header\", pTag],\n    [\"hr\", pTag],\n    [\"main\", pTag],\n    [\"nav\", pTag],\n    [\"ol\", pTag],\n    [\"pre\", pTag],\n    [\"section\", pTag],\n    [\"table\", pTag],\n    [\"ul\", pTag],\n    [\"rt\", rtpTags],\n    [\"rp\", rtpTags],\n    [\"tbody\", tableSectionTags],\n    [\"tfoot\", tableSectionTags],\n]);\nconst voidElements = new Set([\n    \"area\",\n    \"base\",\n    \"basefont\",\n    \"br\",\n    \"col\",\n    \"command\",\n    \"embed\",\n    \"frame\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"isindex\",\n    \"keygen\",\n    \"link\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\",\n]);\nconst foreignContextElements = new Set([\"math\", \"svg\"]);\nconst htmlIntegrationElements = new Set([\n    \"mi\",\n    \"mo\",\n    \"mn\",\n    \"ms\",\n    \"mtext\",\n    \"annotation-xml\",\n    \"foreignobject\",\n    \"desc\",\n    \"title\",\n]);\nconst reNameEnd = /\\s|\\//;\nexport class Parser {\n    constructor(cbs, options = {}) {\n        var _a, _b, _c, _d, _e, _f;\n        this.options = options;\n        /** The start index of the last event. */\n        this.startIndex = 0;\n        /** The end index of the last event. */\n        this.endIndex = 0;\n        /**\n         * Store the start index of the current open tag,\n         * so we can update the start index for attributes.\n         */\n        this.openTagStart = 0;\n        this.tagname = \"\";\n        this.attribname = \"\";\n        this.attribvalue = \"\";\n        this.attribs = null;\n        this.stack = [];\n        this.buffers = [];\n        this.bufferOffset = 0;\n        /** The index of the last written buffer. Used when resuming after a `pause()`. */\n        this.writeIndex = 0;\n        /** Indicates whether the parser has finished running / `.end` has been called. */\n        this.ended = false;\n        this.cbs = cbs !== null && cbs !== void 0 ? cbs : {};\n        this.htmlMode = !this.options.xmlMode;\n        this.lowerCaseTagNames = (_a = options.lowerCaseTags) !== null && _a !== void 0 ? _a : this.htmlMode;\n        this.lowerCaseAttributeNames =\n            (_b = options.lowerCaseAttributeNames) !== null && _b !== void 0 ? _b : this.htmlMode;\n        this.recognizeSelfClosing =\n            (_c = options.recognizeSelfClosing) !== null && _c !== void 0 ? _c : !this.htmlMode;\n        this.tokenizer = new ((_d = options.Tokenizer) !== null && _d !== void 0 ? _d : Tokenizer)(this.options, this);\n        this.foreignContext = [!this.htmlMode];\n        (_f = (_e = this.cbs).onparserinit) === null || _f === void 0 ? void 0 : _f.call(_e, this);\n    }\n    // Tokenizer event handlers\n    /** @internal */\n    ontext(start, endIndex) {\n        var _a, _b;\n        const data = this.getSlice(start, endIndex);\n        this.endIndex = endIndex - 1;\n        (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, data);\n        this.startIndex = endIndex;\n    }\n    /** @internal */\n    ontextentity(cp, endIndex) {\n        var _a, _b;\n        this.endIndex = endIndex - 1;\n        (_b = (_a = this.cbs).ontext) === null || _b === void 0 ? void 0 : _b.call(_a, fromCodePoint(cp));\n        this.startIndex = endIndex;\n    }\n    /**\n     * Checks if the current tag is a void element. Override this if you want\n     * to specify your own additional void elements.\n     */\n    isVoidElement(name) {\n        return this.htmlMode && voidElements.has(name);\n    }\n    /** @internal */\n    onopentagname(start, endIndex) {\n        this.endIndex = endIndex;\n        let name = this.getSlice(start, endIndex);\n        if (this.lowerCaseTagNames) {\n            name = name.toLowerCase();\n        }\n        this.emitOpenTag(name);\n    }\n    emitOpenTag(name) {\n        var _a, _b, _c, _d;\n        this.openTagStart = this.startIndex;\n        this.tagname = name;\n        const impliesClose = this.htmlMode && openImpliesClose.get(name);\n        if (impliesClose) {\n            while (this.stack.length > 0 && impliesClose.has(this.stack[0])) {\n                const element = this.stack.shift();\n                (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, element, true);\n            }\n        }\n        if (!this.isVoidElement(name)) {\n            this.stack.unshift(name);\n            if (this.htmlMode) {\n                if (foreignContextElements.has(name)) {\n                    this.foreignContext.unshift(true);\n                }\n                else if (htmlIntegrationElements.has(name)) {\n                    this.foreignContext.unshift(false);\n                }\n            }\n        }\n        (_d = (_c = this.cbs).onopentagname) === null || _d === void 0 ? void 0 : _d.call(_c, name);\n        if (this.cbs.onopentag)\n            this.attribs = {};\n    }\n    endOpenTag(isImplied) {\n        var _a, _b;\n        this.startIndex = this.openTagStart;\n        if (this.attribs) {\n            (_b = (_a = this.cbs).onopentag) === null || _b === void 0 ? void 0 : _b.call(_a, this.tagname, this.attribs, isImplied);\n            this.attribs = null;\n        }\n        if (this.cbs.onclosetag && this.isVoidElement(this.tagname)) {\n            this.cbs.onclosetag(this.tagname, true);\n        }\n        this.tagname = \"\";\n    }\n    /** @internal */\n    onopentagend(endIndex) {\n        this.endIndex = endIndex;\n        this.endOpenTag(false);\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onclosetag(start, endIndex) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        this.endIndex = endIndex;\n        let name = this.getSlice(start, endIndex);\n        if (this.lowerCaseTagNames) {\n            name = name.toLowerCase();\n        }\n        if (this.htmlMode &&\n            (foreignContextElements.has(name) ||\n                htmlIntegrationElements.has(name))) {\n            this.foreignContext.shift();\n        }\n        if (!this.isVoidElement(name)) {\n            const pos = this.stack.indexOf(name);\n            if (pos !== -1) {\n                for (let index = 0; index <= pos; index++) {\n                    const element = this.stack.shift();\n                    // We know the stack has sufficient elements.\n                    (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, element, index !== pos);\n                }\n            }\n            else if (this.htmlMode && name === \"p\") {\n                // Implicit open before close\n                this.emitOpenTag(\"p\");\n                this.closeCurrentTag(true);\n            }\n        }\n        else if (this.htmlMode && name === \"br\") {\n            // We can't use `emitOpenTag` for implicit open, as `br` would be implicitly closed.\n            (_d = (_c = this.cbs).onopentagname) === null || _d === void 0 ? void 0 : _d.call(_c, \"br\");\n            (_f = (_e = this.cbs).onopentag) === null || _f === void 0 ? void 0 : _f.call(_e, \"br\", {}, true);\n            (_h = (_g = this.cbs).onclosetag) === null || _h === void 0 ? void 0 : _h.call(_g, \"br\", false);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onselfclosingtag(endIndex) {\n        this.endIndex = endIndex;\n        if (this.recognizeSelfClosing || this.foreignContext[0]) {\n            this.closeCurrentTag(false);\n            // Set `startIndex` for next node\n            this.startIndex = endIndex + 1;\n        }\n        else {\n            // Ignore the fact that the tag is self-closing.\n            this.onopentagend(endIndex);\n        }\n    }\n    closeCurrentTag(isOpenImplied) {\n        var _a, _b;\n        const name = this.tagname;\n        this.endOpenTag(isOpenImplied);\n        // Self-closing tags will be on the top of the stack\n        if (this.stack[0] === name) {\n            // If the opening tag isn't implied, the closing tag has to be implied.\n            (_b = (_a = this.cbs).onclosetag) === null || _b === void 0 ? void 0 : _b.call(_a, name, !isOpenImplied);\n            this.stack.shift();\n        }\n    }\n    /** @internal */\n    onattribname(start, endIndex) {\n        this.startIndex = start;\n        const name = this.getSlice(start, endIndex);\n        this.attribname = this.lowerCaseAttributeNames\n            ? name.toLowerCase()\n            : name;\n    }\n    /** @internal */\n    onattribdata(start, endIndex) {\n        this.attribvalue += this.getSlice(start, endIndex);\n    }\n    /** @internal */\n    onattribentity(cp) {\n        this.attribvalue += fromCodePoint(cp);\n    }\n    /** @internal */\n    onattribend(quote, endIndex) {\n        var _a, _b;\n        this.endIndex = endIndex;\n        (_b = (_a = this.cbs).onattribute) === null || _b === void 0 ? void 0 : _b.call(_a, this.attribname, this.attribvalue, quote === QuoteType.Double\n            ? '\"'\n            : quote === QuoteType.Single\n                ? \"'\"\n                : quote === QuoteType.NoValue\n                    ? undefined\n                    : null);\n        if (this.attribs &&\n            !Object.prototype.hasOwnProperty.call(this.attribs, this.attribname)) {\n            this.attribs[this.attribname] = this.attribvalue;\n        }\n        this.attribvalue = \"\";\n    }\n    getInstructionName(value) {\n        const index = value.search(reNameEnd);\n        let name = index < 0 ? value : value.substr(0, index);\n        if (this.lowerCaseTagNames) {\n            name = name.toLowerCase();\n        }\n        return name;\n    }\n    /** @internal */\n    ondeclaration(start, endIndex) {\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex);\n        if (this.cbs.onprocessinginstruction) {\n            const name = this.getInstructionName(value);\n            this.cbs.onprocessinginstruction(`!${name}`, `!${value}`);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onprocessinginstruction(start, endIndex) {\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex);\n        if (this.cbs.onprocessinginstruction) {\n            const name = this.getInstructionName(value);\n            this.cbs.onprocessinginstruction(`?${name}`, `?${value}`);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    oncomment(start, endIndex, offset) {\n        var _a, _b, _c, _d;\n        this.endIndex = endIndex;\n        (_b = (_a = this.cbs).oncomment) === null || _b === void 0 ? void 0 : _b.call(_a, this.getSlice(start, endIndex - offset));\n        (_d = (_c = this.cbs).oncommentend) === null || _d === void 0 ? void 0 : _d.call(_c);\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    oncdata(start, endIndex, offset) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n        this.endIndex = endIndex;\n        const value = this.getSlice(start, endIndex - offset);\n        if (!this.htmlMode || this.options.recognizeCDATA) {\n            (_b = (_a = this.cbs).oncdatastart) === null || _b === void 0 ? void 0 : _b.call(_a);\n            (_d = (_c = this.cbs).ontext) === null || _d === void 0 ? void 0 : _d.call(_c, value);\n            (_f = (_e = this.cbs).oncdataend) === null || _f === void 0 ? void 0 : _f.call(_e);\n        }\n        else {\n            (_h = (_g = this.cbs).oncomment) === null || _h === void 0 ? void 0 : _h.call(_g, `[CDATA[${value}]]`);\n            (_k = (_j = this.cbs).oncommentend) === null || _k === void 0 ? void 0 : _k.call(_j);\n        }\n        // Set `startIndex` for next node\n        this.startIndex = endIndex + 1;\n    }\n    /** @internal */\n    onend() {\n        var _a, _b;\n        if (this.cbs.onclosetag) {\n            // Set the end index for all remaining tags\n            this.endIndex = this.startIndex;\n            for (let index = 0; index < this.stack.length; index++) {\n                this.cbs.onclosetag(this.stack[index], true);\n            }\n        }\n        (_b = (_a = this.cbs).onend) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    /**\n     * Resets the parser to a blank state, ready to parse a new HTML document\n     */\n    reset() {\n        var _a, _b, _c, _d;\n        (_b = (_a = this.cbs).onreset) === null || _b === void 0 ? void 0 : _b.call(_a);\n        this.tokenizer.reset();\n        this.tagname = \"\";\n        this.attribname = \"\";\n        this.attribs = null;\n        this.stack.length = 0;\n        this.startIndex = 0;\n        this.endIndex = 0;\n        (_d = (_c = this.cbs).onparserinit) === null || _d === void 0 ? void 0 : _d.call(_c, this);\n        this.buffers.length = 0;\n        this.foreignContext.length = 0;\n        this.foreignContext.unshift(!this.htmlMode);\n        this.bufferOffset = 0;\n        this.writeIndex = 0;\n        this.ended = false;\n    }\n    /**\n     * Resets the parser, then parses a complete document and\n     * pushes it to the handler.\n     *\n     * @param data Document to parse.\n     */\n    parseComplete(data) {\n        this.reset();\n        this.end(data);\n    }\n    getSlice(start, end) {\n        while (start - this.bufferOffset >= this.buffers[0].length) {\n            this.shiftBuffer();\n        }\n        let slice = this.buffers[0].slice(start - this.bufferOffset, end - this.bufferOffset);\n        while (end - this.bufferOffset > this.buffers[0].length) {\n            this.shiftBuffer();\n            slice += this.buffers[0].slice(0, end - this.bufferOffset);\n        }\n        return slice;\n    }\n    shiftBuffer() {\n        this.bufferOffset += this.buffers[0].length;\n        this.writeIndex--;\n        this.buffers.shift();\n    }\n    /**\n     * Parses a chunk of data and calls the corresponding callbacks.\n     *\n     * @param chunk Chunk to parse.\n     */\n    write(chunk) {\n        var _a, _b;\n        if (this.ended) {\n            (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, new Error(\".write() after done!\"));\n            return;\n        }\n        this.buffers.push(chunk);\n        if (this.tokenizer.running) {\n            this.tokenizer.write(chunk);\n            this.writeIndex++;\n        }\n    }\n    /**\n     * Parses the end of the buffer and clears the stack, calls onend.\n     *\n     * @param chunk Optional final chunk to parse.\n     */\n    end(chunk) {\n        var _a, _b;\n        if (this.ended) {\n            (_b = (_a = this.cbs).onerror) === null || _b === void 0 ? void 0 : _b.call(_a, new Error(\".end() after done!\"));\n            return;\n        }\n        if (chunk)\n            this.write(chunk);\n        this.ended = true;\n        this.tokenizer.end();\n    }\n    /**\n     * Pauses parsing. The parser won't emit events until `resume` is called.\n     */\n    pause() {\n        this.tokenizer.pause();\n    }\n    /**\n     * Resumes parsing after `pause` was called.\n     */\n    resume() {\n        this.tokenizer.resume();\n        while (this.tokenizer.running &&\n            this.writeIndex < this.buffers.length) {\n            this.tokenizer.write(this.buffers[this.writeIndex++]);\n        }\n        if (this.ended)\n            this.tokenizer.end();\n    }\n    /**\n     * Alias of `write`, for backwards compatibility.\n     *\n     * @param chunk Chunk to parse.\n     * @deprecated\n     */\n    parseChunk(chunk) {\n        this.write(chunk);\n    }\n    /**\n     * Alias of `end`, for backwards compatibility.\n     *\n     * @param chunk Optional final chunk to parse.\n     * @deprecated\n     */\n    done(chunk) {\n        this.end(chunk);\n    }\n}\n//# sourceMappingURL=Parser.js.map","import { Parser } from \"./Parser.js\";\nexport { Parser } from \"./Parser.js\";\nimport { DomHandler, } from \"domhandler\";\nexport { DomHandler, \n// Old name for DomHandler\nDomHandler as DefaultHandler, } from \"domhandler\";\n// Helper methods\n/**\n * Parses the data, returns the resulting document.\n *\n * @param data The data that should be parsed.\n * @param options Optional options for the parser and DOM handler.\n */\nexport function parseDocument(data, options) {\n    const handler = new DomHandler(undefined, options);\n    new Parser(handler, options).end(data);\n    return handler.root;\n}\n/**\n * Parses data, returns an array of the root nodes.\n *\n * Note that the root nodes still have a `Document` node as their parent.\n * Use `parseDocument` to get the `Document` node instead.\n *\n * @param data The data that should be parsed.\n * @param options Optional options for the parser and DOM handler.\n * @deprecated Use `parseDocument` instead.\n */\nexport function parseDOM(data, options) {\n    return parseDocument(data, options).children;\n}\n/**\n * Creates a parser instance, with an attached DOM handler.\n *\n * @param callback A callback that will be called once parsing has been completed, with the resulting document.\n * @param options Optional options for the parser and DOM handler.\n * @param elementCallback An optional callback that will be called every time a tag has been completed inside of the DOM.\n */\nexport function createDocumentStream(callback, options, elementCallback) {\n    const handler = new DomHandler((error) => callback(error, handler.root), options, elementCallback);\n    return new Parser(handler, options);\n}\n/**\n * Creates a parser instance, with an attached DOM handler.\n *\n * @param callback A callback that will be called once parsing has been completed, with an array of root nodes.\n * @param options Optional options for the parser and DOM handler.\n * @param elementCallback An optional callback that will be called every time a tag has been completed inside of the DOM.\n * @deprecated Use `createDocumentStream` instead.\n */\nexport function createDomStream(callback, options, elementCallback) {\n    const handler = new DomHandler(callback, options, elementCallback);\n    return new Parser(handler, options);\n}\nexport { default as Tokenizer, QuoteType, } from \"./Tokenizer.js\";\n/*\n * All of the following exports exist for backwards-compatibility.\n * They should probably be removed eventually.\n */\nexport * as ElementType from \"domelementtype\";\nimport { getFeed } from \"domutils\";\nexport { getFeed } from \"domutils\";\nconst parseFeedDefaultOptions = { xmlMode: true };\n/**\n * Parse a feed.\n *\n * @param feed The feed that should be parsed, as a string.\n * @param options Optionally, options for parsing. When using this, you should set `xmlMode` to `true`.\n */\nexport function parseFeed(feed, options = parseFeedDefaultOptions) {\n    return getFeed(parseDOM(feed, options));\n}\nexport * as DomUtils from \"domutils\";\n//# sourceMappingURL=index.js.map","/**\n * Handler class.\n */\nexport class Handler {\n    /**\n     * Creates a new handler.\n     * @param args The handler properties (`name`, `build`, `detect`, `helper` and `parse`)\n     * @see\n     * - {@link BaseHandler}\n     * - {@link BuildFunction}\n     * - {@link DetectFunction}\n     * - {@link Helper}\n     * - {@link ParseFunction}\n     * - {@link ParseOptions}\n     * @example\n     * ```ts\n     * const handler = new Handler({\n     *     name: \"ext\",\n     *     build: (captions: Caption[], options: BuildOptions): string => {\n     *         // ...\n     *     },\n     *     detect: (content: string): boolean | string => {\n     *         // ...\n     *     },\n     *     parse: (content: string, options: ParseOptions): Caption[] => {\n     *         // ...\n     *     },\n     * });\n     * ```\n     */\n    constructor({ name, build, detect, helper, parse }) {\n        this.name = name;\n        this.helper = helper;\n        this.build = build;\n        this.detect = (content) => {\n            if (typeof content !== \"string\") {\n                throw new TypeError(`Expected string, got ${typeof content}!`);\n            }\n            return detect(content);\n        };\n        this.parse = (content, _options) => {\n            if (typeof content !== \"string\") {\n                throw new TypeError(`Expected string, got ${typeof content}!`);\n            }\n            return parse(content, _options);\n        };\n    }\n}\n/**\n * Build a handler.\n * @param args The handler properties\n * @returns The handler\n * @see {@link Handler}\n */\nexport const buildHandler = (args) => {\n    return new Handler(args);\n};\n","import { buildHandler } from \"../handler.js\";\nconst FORMAT_NAME = \"ssa\";\nconst helper = {\n    /**\n     * Converts a time string in format of hh:mm:ss.fff or hh:mm:ss,fff to milliseconds.\n     * @param s The time string to convert\n     * @throws {TypeError} If the time string is invalid\n     * @returns Milliseconds\n     */\n    toMilliseconds: (s) => {\n        const match = /^\\s*(\\d+:)?(\\d{1,2}):(\\d{1,2})(?:[.,](\\d{1,3}))?\\s*$/.exec(s);\n        if (!match) {\n            throw new TypeError(`Invalid time format: ${s}`);\n        }\n        const hh = match[1] ? parseInt(match[1].replace(\":\", \"\")) : 0;\n        const mm = parseInt(match[2], 10);\n        const ss = parseInt(match[3], 10);\n        const ff = match[4] ? parseInt(match[4], 10) : 0;\n        const ms = hh * 3600 * 1000 + mm * 60 * 1000 + ss * 1000 + ff * 10;\n        return ms;\n    },\n    /**\n     * Converts milliseconds to a time string in format of hh:mm:ss.fff.\n     * @param ms Milliseconds\n     * @returns Time string in format of hh:mm:ss.fff\n     */\n    toTimeString: (ms) => {\n        const hh = Math.floor(ms / 1000 / 3600);\n        const mm = Math.floor((ms / 1000 / 60) % 60);\n        const ss = Math.floor((ms / 1000) % 60);\n        const ff = Math.floor((ms % 1000) / 10); // 2 digits\n        const time = `${hh}:${mm < 10 ? \"0\" : \"\"}${mm}:${ss < 10 ? \"0\" : \"\"}${ss}.${ff < 10 ? \"0\" : \"\"}${ff}`;\n        return time;\n    },\n};\n/**\n * Internal helper function for building caption data.\n * @param columns Columns\n * @param values Values\n * @returns Caption data\n * @private\n */\nconst _buildCaptionData = (columns, values) => {\n    const data = {};\n    for (let c = 0; c < columns.length && c < values.length; c++) {\n        data[columns[c]] = values[c];\n    }\n    return data;\n};\n/**\n * Parses captions in SubStation Alpha format (.ssa).\n * @param content The subtitle content\n * @param options Parse options\n * @throws {TypeError} If the meta data is in invalid format\n * @returns Parsed captions\n */\nconst parse = (content, options) => {\n    var _a;\n    let meta;\n    let columns = null;\n    const captions = [];\n    const eol = (_a = options.eol) !== null && _a !== void 0 ? _a : \"\\r\\n\";\n    const parts = content.split(/\\r?\\n\\s*\\n/);\n    for (const part of parts) {\n        const regex = /^\\s*\\[([^\\]]+)\\]\\r?\\n([\\s\\S]*)$/;\n        const match = regex.exec(part);\n        if (match) {\n            const tag = match[1];\n            const lines = match[2].split(/\\r?\\n/);\n            for (const line of lines) {\n                if (/^\\s*;/.test(line)) {\n                    continue; // Skip comment\n                }\n                // FIXME: prevent backtracking\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                const lineMatch = /^\\s*([^\\s:]+):\\s*(.*)$/.exec(line);\n                if (!lineMatch) {\n                    continue;\n                }\n                if (tag === \"Script Info\") {\n                    if (!meta) {\n                        meta = {};\n                        meta.type = \"meta\";\n                        meta.data = {};\n                        captions.push(meta);\n                    }\n                    if (typeof meta.data === \"object\") {\n                        const name = lineMatch[1].trim();\n                        const value = lineMatch[2].trim();\n                        meta.data[name] = value;\n                    }\n                    else {\n                        throw new TypeError(`Invalid meta data: ${line}`);\n                    }\n                }\n                else if (tag === \"V4 Styles\" || tag === \"V4+ Styles\") {\n                    const name = lineMatch[1].trim();\n                    const value = lineMatch[2].trim();\n                    if (name === \"Format\") {\n                        columns = value.split(/\\s*,\\s*/);\n                    }\n                    else if (name === \"Style\" && columns) {\n                        const values = value.split(/\\s*,\\s*/);\n                        const caption = {};\n                        caption.type = \"style\";\n                        caption.data = _buildCaptionData(columns, values);\n                        captions.push(caption);\n                    }\n                }\n                else if (tag === \"Events\") {\n                    const name = lineMatch[1].trim();\n                    const value = lineMatch[2].trim();\n                    if (name === \"Format\") {\n                        columns = value.split(/\\s*,\\s*/);\n                    }\n                    else if (name === \"Dialogue\" && columns) {\n                        const values = value.split(/\\s*,\\s*/);\n                        const caption = {};\n                        caption.type = \"caption\";\n                        caption.data = _buildCaptionData(columns, values);\n                        caption.start = helper.toMilliseconds(caption.data.Start);\n                        caption.end = helper.toMilliseconds(caption.data.End);\n                        caption.duration = caption.end - caption.start;\n                        caption.content = caption.data.Text;\n                        // Work-around for missing text (when the text contains ',' char)\n                        const indexOfText = value.split(\",\", columns.length - 1).join(\",\").length + 1 + 1;\n                        caption.content = value.substring(indexOfText);\n                        caption.data.Text = caption.content;\n                        caption.text = caption.content\n                            .replace(/\\\\N/g, eol) // \"\\N\" for new line\n                            .replace(/\\{[^}]+\\}/g, \"\"); // {\\pos(400,570)}\n                        captions.push(caption);\n                    }\n                }\n            }\n        }\n        if (options.verbose) {\n            console.warn(\"Unknown part\", part);\n        }\n    }\n    return captions;\n};\n/**\n * Builds captions in SubStation Alpha format (.ssa).\n * @param captions The captions to build\n * @param options Build options\n * @returns The built captions string in SubStation Alpha format\n */\nconst build = (captions, options) => {\n    var _a;\n    const eol = (_a = options.eol) !== null && _a !== void 0 ? _a : \"\\r\\n\";\n    const ass = options.format === \"ass\";\n    let content = \"\";\n    content += `[Script Info]${eol}`;\n    content += `; Script generated by subsrt ${eol}`;\n    content += `ScriptType: v4.00${ass ? \"+\" : \"\"}${eol}`;\n    content += `Collisions: Normal${eol}`;\n    content += eol;\n    if (ass) {\n        content += `[V4+ Styles]${eol}`;\n        content += `Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding${eol}`;\n        content += `Style: DefaultVCD, Arial,28,&H00B4FCFC,&H00B4FCFC,&H00000008,&H80000008,-1,0,0,0,100,100,0.00,0.00,1,1.00,2.00,2,30,30,30,0${eol}`;\n    }\n    else {\n        content += `[V4 Styles]${eol}`;\n        content += `Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, TertiaryColour, BackColour, Bold, Italic, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, AlphaLevel, Encoding${eol}`;\n        content += `Style: DefaultVCD, Arial,28,11861244,11861244,11861244,-2147483640,-1,0,1,1,2,2,30,30,30,0,0${eol}`;\n    }\n    content += eol;\n    content += `[Events]${eol}`;\n    content += `Format: ${ass ? \"Layer\" : \"Marked\"}, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text${eol}`;\n    for (const caption of captions) {\n        if (caption.type === \"meta\") {\n            continue;\n        }\n        if (!caption.type || caption.type === \"caption\") {\n            content += `Dialogue: ${ass ? \"0\" : \"Marked=0\"},${helper.toTimeString(caption.start)},${helper.toTimeString(caption.end)},DefaultVCD, NTP,0000,0000,0000,,${caption.text.replace(/\\r?\\n/g, \"\\\\N\")}${eol}`;\n            continue;\n        }\n        if (options.verbose) {\n            console.log(\"SKIP:\", caption);\n        }\n    }\n    return content;\n};\n/**\n * Detects whether the content is in ASS or SSA format.\n * @param content The subtitle content\n * @returns Whether the content is in \"ass\", \"ssa\" or neither\n */\nconst detect = (content) => {\n    if (/^\\s*\\[Script Info\\]\\r?\\n/.test(content) && /\\s*\\[Events\\]\\r?\\n/.test(content)) {\n        /*\n        [Script Info]\n        ...\n        [Events]\n        */\n        // Advanced (V4+) styles for ASS format\n        return content.indexOf(\"[V4+ Styles]\") > 0 ? \"ass\" : \"ssa\";\n    }\n    return false;\n};\nexport default buildHandler({ name: FORMAT_NAME, build, detect, helper, parse });\nexport { FORMAT_NAME as name, build, detect, helper, parse };\n","import { buildHandler } from \"../handler.js\";\nconst FORMAT_NAME = \"ass\";\n// Compatible format\nimport { build, detect, helper, parse } from \"./ssa.js\";\nexport default buildHandler({ name: FORMAT_NAME, build, detect, helper, parse });\nexport { FORMAT_NAME as name, build, detect, helper, parse };\n","import { buildHandler } from \"../handler.js\";\nconst FORMAT_NAME = \"json\";\n/**\n * Parses captions in JSON format.\n * @param content The subtitle content\n * @param _options Parse options\n * @returns Parsed captions\n */\nconst parse = (content, _options) => JSON.parse(content);\n/**\n * Builds captions in JSON format.\n * @param captions The captions to build\n * @param _options Build options\n * @returns The built captions string in JSON format\n */\nconst build = (captions, _options) => JSON.stringify(captions, undefined, 2);\n/**\n * Detects whether the content is in JSON format.\n * @param content The subtitle content\n * @returns Whether the content is in JSON format\n */\nconst detect = (content) => {\n    /*\n    [\n        { ... }\n    ]\n    */\n    // return /^\\[[\\s\\r\\n]*\\{[\\s\\S]*\\}[\\s\\r\\n]*\\]$/g.test(content);\n    try {\n        const res = JSON.parse(content);\n        return Array.isArray(res) && res.length > 0 && typeof res[0] === \"object\";\n    }\n    catch (e) {\n        return false;\n    }\n};\nexport default buildHandler({ name: FORMAT_NAME, build, detect, parse });\nexport { FORMAT_NAME as name, build, detect, parse };\n","import { buildHandler } from \"../handler.js\";\nconst FORMAT_NAME = \"lrc\";\nconst helper = {\n    /**\n     * Converts a time string in format of mm:ss.ff or mm:ss,ff to milliseconds.\n     * @param s The time string to convert\n     * @throws {TypeError} If the time string is invalid\n     * @returns Milliseconds\n     */\n    toMilliseconds: (s) => {\n        const match = /^\\s*(\\d+):(\\d{1,2})(?:[.,](\\d{1,3}))?\\s*$/.exec(s);\n        if (!match) {\n            throw new TypeError(`Invalid time format: ${s}`);\n        }\n        const mm = parseInt(match[1], 10);\n        const ss = parseInt(match[2], 10);\n        const ff = match[3] ? parseInt(match[3], 10) : 0;\n        const ms = mm * 60 * 1000 + ss * 1000 + ff * 10;\n        return ms;\n    },\n    /**\n     * Converts milliseconds to a time string in format of mm:ss.ff.\n     * @param ms Milliseconds\n     * @returns Time string in format of mm:ss.ff\n     */\n    toTimeString: (ms) => {\n        const mm = Math.floor(ms / 1000 / 60);\n        const ss = Math.floor((ms / 1000) % 60);\n        const ff = Math.floor(ms % 1000);\n        const time = `${(mm < 10 ? \"0\" : \"\") + mm}:${ss < 10 ? \"0\" : \"\"}${ss}.${ff < 100 ? \"0\" : \"\"}${ff < 10 ? \"0\" : Math.floor(ff / 10)}`;\n        return time;\n    },\n};\n/**\n * Parses captions in LRC format.\n * @param content The subtitle content\n * @param options Parse options\n * @returns Parsed captions\n * @see https://en.wikipedia.org/wiki/LRC_%28file_format%29\n */\nconst parse = (content, options) => {\n    let prev = null;\n    const captions = [];\n    // const eol = options.eol || \"\\r\\n\";\n    const parts = content.split(/\\r?\\n/);\n    for (const part of parts) {\n        if (!part || part.trim().length === 0) {\n            continue;\n        }\n        // LRC content\n        const regex = /^\\[(\\d{1,2}:\\d{1,2}(?:[.,]\\d{1,3})?)\\](.*)(?:\\r?\\n)*$/;\n        const match = regex.exec(part);\n        if (match) {\n            const caption = {};\n            caption.type = \"caption\";\n            caption.start = helper.toMilliseconds(match[1]);\n            caption.end = caption.start + 2000;\n            caption.duration = caption.end - caption.start;\n            caption.content = match[2];\n            caption.text = caption.content;\n            captions.push(caption);\n            // Update previous\n            if (prev) {\n                prev.end = caption.start;\n                prev.duration = prev.end - prev.start;\n            }\n            prev = caption;\n            continue;\n        }\n        // LRC meta\n        const meta = /^\\[(\\w+):([^\\]]*)\\](?:\\r?\\n)*$/.exec(part);\n        if (meta) {\n            const caption = {};\n            caption.type = \"meta\";\n            caption.tag = meta[1];\n            if (meta[2]) {\n                caption.data = meta[2];\n            }\n            captions.push(caption);\n            continue;\n        }\n        if (options.verbose) {\n            console.warn(\"Unknown part\", part);\n        }\n    }\n    return captions;\n};\n/**\n * Builds captions in LRC format.\n * @param captions The captions to build\n * @param options Build options\n * @returns The built captions string in LRC format\n * @see https://en.wikipedia.org/wiki/LRC_%28file_format%29\n */\nconst build = (captions, options) => {\n    var _a;\n    let content = \"\";\n    let lyrics = false;\n    const eol = (_a = options.eol) !== null && _a !== void 0 ? _a : \"\\r\\n\";\n    for (const caption of captions) {\n        if (caption.type === \"meta\") {\n            if (caption.tag && caption.data && typeof caption.data === \"string\") {\n                content += `[${caption.tag}:${caption.data.replace(/[\\r\\n]+/g, \" \")}]${eol}`;\n            }\n            continue;\n        }\n        if (!caption.type || caption.type === \"caption\") {\n            if (!lyrics) {\n                content += eol; //New line when lyrics start\n                lyrics = true;\n            }\n            content += `[${helper.toTimeString(caption.start)}]${caption.text}${eol}`;\n            continue;\n        }\n        if (options.verbose) {\n            console.log(\"SKIP:\", caption);\n        }\n    }\n    return content;\n};\n/**\n * Detects whether the content is in LRC format.\n * @param content The subtitle content\n * @returns Format name if detected, or null if not detected\n */\nconst detect = (content) => {\n    /*\n    [04:48.28]Sister, perfume?\n    */\n    return /\\r?\\n\\[\\d+:\\d{1,2}(?:[.,]\\d{1,3})?\\].*\\r?\\n/.test(content);\n};\nexport default buildHandler({ name: FORMAT_NAME, build, detect, helper, parse });\nexport { FORMAT_NAME as name, build, detect, helper, parse };\n","import { buildHandler } from \"../handler.js\";\nconst FORMAT_NAME = \"sbv\";\nconst helper = {\n    /**\n     * Converts a time string in format of hh:mm:ss.sss or hh:mm:ss,sss to milliseconds.\n     * @param s The time string to convert\n     * @throws {TypeError} If the time string is invalid\n     * @returns Milliseconds\n     */\n    toMilliseconds: (s) => {\n        const match = /^\\s*(\\d{1,2}):(\\d{1,2}):(\\d{1,2})(?:[.,](\\d{1,3}))?\\s*$/.exec(s);\n        if (!match) {\n            throw new TypeError(`Invalid time format: ${s}`);\n        }\n        const hh = parseInt(match[1], 10);\n        const mm = parseInt(match[2], 10);\n        const ss = parseInt(match[3], 10);\n        const ff = match[4] ? parseInt(match[4], 10) : 0;\n        const ms = hh * 3600 * 1000 + mm * 60 * 1000 + ss * 1000 + ff;\n        return ms;\n    },\n    /**\n     * Converts milliseconds to a time string in format of hh:mm:ss.sss.\n     * @param ms Milliseconds\n     * @returns Time string in format of hh:mm:ss.sss\n     */\n    toTimeString: (ms) => {\n        const hh = Math.floor(ms / 1000 / 3600);\n        const mm = Math.floor((ms / 1000 / 60) % 60);\n        const ss = Math.floor((ms / 1000) % 60);\n        const ff = Math.floor(ms % 1000);\n        const time = `${(hh < 10 ? \"0\" : \"\") + hh}:${mm < 10 ? \"0\" : \"\"}${mm}:${ss < 10 ? \"0\" : \"\"}${ss}.${ff < 100 ? \"0\" : \"\"}${ff < 10 ? \"0\" : \"\"}${ff}`;\n        return time;\n    },\n};\n/**\n * Parses captions in SubViewer format (.sbv).\n * @param content The subtitle content\n * @param options Parse options\n * @returns Parsed captions\n */\nconst parse = (content, options) => {\n    var _a;\n    const captions = [];\n    const eol = (_a = options.eol) !== null && _a !== void 0 ? _a : \"\\r\\n\";\n    const parts = content.split(/\\r?\\n\\s*\\n/);\n    for (const part of parts) {\n        const regex = /^(\\d{1,2}:\\d{1,2}:\\d{1,2}(?:[.,]\\d{1,3})?)\\s*[,;]\\s*(\\d{1,2}:\\d{1,2}:\\d{1,2}(?:[.,]\\d{1,3})?)\\r?\\n([\\s\\S]*)$/;\n        const match = regex.exec(part);\n        if (match) {\n            const caption = {};\n            caption.type = \"caption\";\n            caption.start = helper.toMilliseconds(match[1]);\n            caption.end = helper.toMilliseconds(match[2]);\n            caption.duration = caption.end - caption.start;\n            const lines = match[3].split(/\\[br\\]|\\r?\\n/i);\n            caption.content = lines.join(eol);\n            caption.text = caption.content.replace(/>>[^:]+:\\s*/g, \"\"); // >> SPEAKER NAME:\n            captions.push(caption);\n            continue;\n        }\n        if (options.verbose) {\n            console.warn(\"Unknown part\", part);\n        }\n    }\n    return captions;\n};\n/**\n * Builds captions in SubViewer format (.sbv).\n * @param captions The captions to build\n * @param options Build options\n * @returns The built captions string in SubViewer format\n */\nconst build = (captions, options) => {\n    var _a;\n    let content = \"\";\n    const eol = (_a = options.eol) !== null && _a !== void 0 ? _a : \"\\r\\n\";\n    for (const caption of captions) {\n        if (!caption.type || caption.type === \"caption\") {\n            content += `${helper.toTimeString(caption.start)},${helper.toTimeString(caption.end)}${eol}`;\n            content += caption.text + eol;\n            content += eol;\n            continue;\n        }\n        if (options.verbose) {\n            console.log(\"SKIP:\", caption);\n        }\n    }\n    return content;\n};\n/**\n * Detects whether the content is in SubViewer format.\n * @param content The subtitle content\n * @returns Whether the subtitle format is SubViewer\n */\nconst detect = (content) => {\n    /*\n    00:04:48.280,00:04:50.510\n    Sister, perfume?\n    */\n    return /\\d{1,2}:\\d{1,2}:\\d{1,2}(?:[.,]\\d{1,3})?\\s*[,;]\\s*\\d{1,2}:\\d{1,2}:\\d{1,2}(?:[.,]\\d{1,3})?/.test(content);\n};\nexport default buildHandler({ name: FORMAT_NAME, build, detect, helper, parse });\nexport { FORMAT_NAME as name, build, detect, helper, parse };\n","import { buildHandler } from \"../handler.js\";\nconst FORMAT_NAME = \"smi\";\nconst helper = {\n    /**\n     * Encodes a string to be used in XML.\n     * @param text - The text to be encoded\n     * @returns The HTML-encoded string\n     */\n    htmlEncode: (text) => text\n        .replace(/&/g, \"&amp;\")\n        .replace(/\"/g, \"&quot;\")\n        .replace(/'/g, \"&#39;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        //.replace(/\\s/g, '&nbsp;')\n        .replace(/\\r?\\n/g, \"<BR>\"),\n    /**\n     * Decodes a string that has been HTML-encoded.\n     * @param html The HTML-encoded string to decode\n     * @param eol The end-of-line character to use\n     * @returns The decoded string\n     */\n    htmlDecode: (html, eol) => html\n        .replace(/<BR\\s*\\/?>/gi, eol || \"\\r\\n\")\n        .replace(/&nbsp;/g, \" \")\n        .replace(/&quot;/g, '\"')\n        .replace(/&#39;/g, \"'\")\n        .replace(/&lt;/g, \"<\")\n        .replace(/&gt;/g, \">\")\n        .replace(/&amp;/g, \"&\"),\n};\n/**\n * Parses captions in SAMI format (.smi).\n * @param content The subtitle content\n * @param options Parse options\n * @throw {TypeError} When the format is not supported\n * @returns Parsed captions\n */\nconst parse = (content, options) => {\n    var _a, _b;\n    if (options.format && options.format !== FORMAT_NAME) {\n        throw new TypeError(`Invalid format: ${options.format}`);\n    }\n    const captions = [];\n    const eol = (_a = options.eol) !== null && _a !== void 0 ? _a : \"\\r\\n\";\n    const title = /<TITLE[^>]*>([\\s\\S]*)<\\/TITLE>/i.exec(content);\n    if (title) {\n        const caption = {};\n        caption.type = \"meta\";\n        caption.name = \"title\";\n        caption.data = title[1].replace(/^\\s*/g, \"\").replace(/\\s*$/g, \"\");\n        captions.push(caption);\n    }\n    const style = /<STYLE[^>]*>([\\s\\S]*)<\\/STYLE>/i.exec(content);\n    if (style) {\n        const caption = {};\n        caption.type = \"meta\";\n        caption.name = \"style\";\n        caption.data = style[1];\n        captions.push(caption);\n    }\n    const sami = content\n        .replace(/^[\\s\\S]*<BODY[^>]*>/gi, \"\") // Remove content before body\n        .replace(/<\\/BODY[^>]*>[\\s\\S]*$/gi, \"\"); // Remove content after body\n    let prev = null;\n    const parts = sami.split(/<SYNC/i);\n    for (const _part of parts) {\n        if (!_part || _part.trim().length === 0) {\n            continue;\n        }\n        const part = `<SYNC${_part}`;\n        // <SYNC Start = 1000>\n        const match = /^<SYNC[^>]+Start\\s*=\\s*[\"']?(\\d+)[^\\d>]*>([\\s\\S]*)/i.exec(part);\n        if (match) {\n            const caption = {};\n            caption.type = \"caption\";\n            caption.start = parseInt(match[1], 10);\n            caption.end = caption.start + 2000;\n            caption.duration = caption.end - caption.start;\n            caption.content = match[2].replace(/^<\\/SYNC[^>]*>/gi, \"\");\n            let blank = true;\n            const pMatch = (_b = /^<P.+Class\\s*=\\s*[\"']?([\\w-]+)(?: .*)?>([\\s\\S]*)/i.exec(caption.content)) !== null && _b !== void 0 ? _b : /^<P([^>]*)>([\\s\\S]*)/i.exec(caption.content);\n            if (pMatch) {\n                let html = pMatch[2].replace(/<P[\\s\\S]+$/gi, \"\"); // Remove string after another <P> tag\n                html = html\n                    .replace(/<BR\\s*\\/?>\\s+/gi, eol)\n                    .replace(/<BR\\s*\\/?>/gi, eol)\n                    .replace(/<[^>]+>/g, \"\"); // Remove all tags\n                html = html.replace(/^\\s+/g, \"\").replace(/\\s+$/g, \"\"); // Trim new lines and spaces\n                blank = html.replace(/&nbsp;/gi, \" \").replace(/\\s+/g, \"\").length === 0;\n                caption.text = helper.htmlDecode(html, eol);\n            }\n            if (!options.preserveSpaces && blank) {\n                if (options.verbose) {\n                    console.log(`INFO: Skipping white space caption at ${caption.start}`);\n                }\n            }\n            else {\n                captions.push(caption);\n            }\n            // Update previous\n            if (prev) {\n                prev.end = caption.start;\n                prev.duration = prev.end - prev.start;\n            }\n            prev = caption;\n            continue;\n        }\n        if (options.verbose) {\n            console.warn(\"Unknown part\", _part);\n        }\n    }\n    return captions;\n};\n/**\n * Builds captions in SAMI format (.smi).\n * @param captions The captions to build\n * @param options Build options\n * @returns The built captions string in SAMI format\n */\nconst build = (captions, options) => {\n    var _a, _b, _c, _d;\n    const eol = (_a = options.eol) !== null && _a !== void 0 ? _a : \"\\r\\n\";\n    let content = \"\";\n    content += `<SAMI>${eol}`;\n    content += `<HEAD>${eol}`;\n    content += `<TITLE>${(_b = options.title) !== null && _b !== void 0 ? _b : \"\"}</TITLE>${eol}`;\n    content += `<STYLE TYPE=\"text/css\">${eol}`;\n    content += `<!--${eol}`;\n    content += `P { font-family: Arial; font-weight: normal; color: white; background-color: black; text-align: center; }${eol}`;\n    content += `.LANG { Name: ${(_c = options.langName) !== null && _c !== void 0 ? _c : \"English\"}; lang: ${(_d = options.langCode) !== null && _d !== void 0 ? _d : \"en-US\"}; SAMIType: CC; }${eol}`;\n    content += `-->${eol}`;\n    content += `</STYLE>${eol}`;\n    content += `</HEAD>${eol}`;\n    content += `<BODY>${eol}`;\n    for (const caption of captions) {\n        if (caption.type === \"meta\") {\n            continue;\n        }\n        if (!caption.type || caption.type === \"caption\") {\n            // Start of caption\n            content += `<SYNC Start=${caption.start}>${eol}`;\n            content += `  <P Class=LANG>${helper.htmlEncode(caption.text || \"\")}${options.closeTags ? \"</P>\" : \"\"}${eol}`;\n            if (options.closeTags) {\n                content += `</SYNC>${eol}`;\n            }\n            // Blank line indicates the end of caption\n            content += `<SYNC Start=${caption.end}>${eol}`;\n            content += `  <P Class=LANG>&nbsp;${options.closeTags ? \"</P>\" : \"\"}${eol}`;\n            if (options.closeTags) {\n                content += `</SYNC>${eol}`;\n            }\n            continue;\n        }\n        if (options.verbose) {\n            console.log(\"SKIP:\", caption);\n        }\n    }\n    content += `</BODY>${eol}`;\n    content += `</SAMI>${eol}`;\n    return content;\n};\n/**\n * Detects whether the content is in SAMI format.\n * @param content The content to be detected\n * @returns Whether the subtitle format is SAMI\n */\nconst detect = (content) => {\n    /*\n    <SAMI>\n    <BODY>\n    <SYNC Start=...\n    ...\n    </BODY>\n    </SAMI>\n    */\n    return /<SAMI[^>]*>[\\s\\S]*<BODY[^>]*>/.test(content);\n};\nexport default buildHandler({ name: FORMAT_NAME, build, detect, helper, parse });\nexport { FORMAT_NAME as name, build, detect, helper, parse };\n","import { buildHandler } from \"../handler.js\";\nconst FORMAT_NAME = \"srt\";\nconst helper = {\n    /**\n     * Converts a time string in format of hh:mm:ss, hh:mm:ss.sss or hh:mm:ss,sss to milliseconds.\n     * @param s The time string to convert\n     * @throws {TypeError} If the time string is invalid\n     * @returns Milliseconds\n     */\n    toMilliseconds: (s) => {\n        const match = /^\\s*(\\d{1,2}):(\\d{1,2}):(\\d{1,2})(?:[.,](\\d{1,3}))?\\s*$/.exec(s);\n        if (!match) {\n            throw new TypeError(`Invalid time format: ${s}`);\n        }\n        const hh = parseInt(match[1], 10);\n        const mm = parseInt(match[2], 10);\n        const ss = parseInt(match[3], 10);\n        const ff = match[4] ? parseInt(match[4], 10) : 0;\n        const ms = hh * 3600 * 1000 + mm * 60 * 1000 + ss * 1000 + ff;\n        return ms;\n    },\n    /**\n     * Converts milliseconds to a time string in format of hh:mm:ss,sss.\n     * @param ms Milliseconds\n     * @returns Time string in format of hh:mm:ss,sss\n     */\n    toTimeString: (ms) => {\n        const hh = Math.floor(ms / 1000 / 3600);\n        const mm = Math.floor((ms / 1000 / 60) % 60);\n        const ss = Math.floor((ms / 1000) % 60);\n        const ff = Math.floor(ms % 1000);\n        const time = `${(hh < 10 ? \"0\" : \"\") + hh}:${mm < 10 ? \"0\" : \"\"}${mm}:${ss < 10 ? \"0\" : \"\"}${ss},${ff < 100 ? \"0\" : \"\"}${ff < 10 ? \"0\" : \"\"}${ff}`;\n        return time;\n    },\n};\n/**\n * Parses captions in SubRip format (.srt).\n * @param content The subtitle content\n * @param options Parse options\n * @returns Parsed captions\n */\nconst parse = (content, options) => {\n    var _a;\n    const captions = [];\n    const eol = (_a = options.eol) !== null && _a !== void 0 ? _a : \"\\r\\n\";\n    const parts = content.split(/\\r?\\n\\s*\\n/);\n    for (const part of parts) {\n        const regex = /^(\\d+)\\r?\\n(\\d{1,2}:\\d{1,2}:\\d{1,2}(?:[.,]\\d{1,3})?)\\s*-->\\s*(\\d{1,2}:\\d{1,2}:\\d{1,2}(?:[.,]\\d{1,3})?)\\r?\\n([\\s\\S]*)$/;\n        const match = regex.exec(part);\n        if (match) {\n            const caption = {};\n            caption.type = \"caption\";\n            caption.index = parseInt(match[1], 10);\n            caption.start = helper.toMilliseconds(match[2]);\n            caption.end = helper.toMilliseconds(match[3]);\n            caption.duration = caption.end - caption.start;\n            const lines = match[4].split(/\\r?\\n/);\n            caption.content = lines.join(eol);\n            caption.text = caption.content\n                .replace(/<[^>]+>/g, \"\") // <b>bold</b> or <i>italic</i>\n                .replace(/\\{[^}]+\\}/g, \"\") // {b}bold{/b} or {i}italic{/i}\n                .replace(/>>[^:]*:\\s*/g, \"\"); // >> SPEAKER NAME:\n            captions.push(caption);\n            continue;\n        }\n        if (options.verbose) {\n            console.warn(\"Unknown part\", part);\n        }\n    }\n    return captions;\n};\n/**\n * Builds captions in SubRip format (.srt).\n * @param captions The captions to build\n * @param options Build options\n * @returns The built captions string in SubRip format\n */\nconst build = (captions, options) => {\n    var _a;\n    let srt = \"\";\n    const eol = (_a = options.eol) !== null && _a !== void 0 ? _a : \"\\r\\n\";\n    for (let i = 0; i < captions.length; i++) {\n        const caption = captions[i];\n        if (!caption.type || caption.type === \"caption\") {\n            srt += (i + 1).toString() + eol;\n            srt += `${helper.toTimeString(caption.start)} --> ${helper.toTimeString(caption.end)}${eol}`;\n            srt += caption.text + eol;\n            srt += eol;\n            continue;\n        }\n        if (options.verbose) {\n            console.log(\"SKIP:\", caption);\n        }\n    }\n    return srt;\n};\n/**\n * Detects whether the content is in SubRip format.\n * @param content The subtitle content\n * @returns Whether the content is in SubRip format\n */\nconst detect = (content) => {\n    /*\n    3\n    00:04:48,280 --> 00:04:50,510\n    Sister, perfume?\n    */\n    return /\\d+\\r?\\n\\d{1,2}:\\d{1,2}:\\d{1,2}(?:[.,]\\d{1,3})?\\s*-->\\s*\\d{1,2}:\\d{1,2}:\\d{1,2}(?:[.,]\\d{1,3})?/.test(content);\n};\nexport default buildHandler({ name: FORMAT_NAME, build, detect, helper, parse });\nexport { FORMAT_NAME as name, build, detect, helper, parse };\n","import { buildHandler } from \"../handler.js\";\nconst FORMAT_NAME = \"sub\";\nconst DEFAULT_FPS = 25;\n/**\n * Parses captions in MicroDVD format.\n * @param content The subtitle content\n * @param options Parse options\n * @returns Parsed captions\n * @see https://en.wikipedia.org/wiki/MicroDVD\n */\nconst parse = (content, options) => {\n    var _a;\n    options.fps || (options.fps = DEFAULT_FPS);\n    const fps = options.fps > 0 ? options.fps : DEFAULT_FPS;\n    const captions = [];\n    const eol = (_a = options.eol) !== null && _a !== void 0 ? _a : \"\\r\\n\";\n    const parts = content.split(/\\r?\\n/);\n    for (let i = 0; i < parts.length; i++) {\n        const regex = /^\\{(\\d+)\\}\\{(\\d+)\\}(.*)$/;\n        const match = regex.exec(parts[i]);\n        if (match) {\n            const caption = {};\n            caption.type = \"caption\";\n            caption.index = i + 1;\n            caption.frame = {\n                start: parseInt(match[1], 10),\n                end: parseInt(match[2], 10),\n                count: parseInt(match[2]) - parseInt(match[1], 10),\n            };\n            caption.start = Math.round(caption.frame.start / fps);\n            caption.end = Math.round(caption.frame.end / fps);\n            caption.duration = caption.end - caption.start;\n            const lines = match[3].split(/\\|/);\n            caption.content = lines.join(eol);\n            caption.text = caption.content.replace(/\\{[^}]+\\}/g, \"\"); // {0}{25}{c:$0000ff}{y:b,u}{f:DeJaVuSans}{s:12}Hello!\n            captions.push(caption);\n            continue;\n        }\n        if (options.verbose) {\n            console.warn(\"Unknown part\", parts[i]);\n        }\n    }\n    return captions;\n};\n/**\n * Builds captions in MicroDVD format.\n * @param captions The captions to build\n * @param options Build options\n * @returns The built captions string in MicroDVD format\n * @see https://en.wikipedia.org/wiki/MicroDVD\n */\nconst build = (captions, options) => {\n    var _a, _b;\n    const fps = ((_a = options.fps) !== null && _a !== void 0 ? _a : 0) > 0 ? options.fps : DEFAULT_FPS;\n    let sub = \"\";\n    const eol = (_b = options.eol) !== null && _b !== void 0 ? _b : \"\\r\\n\";\n    for (const caption of captions) {\n        if (!caption.type || caption.type === \"caption\") {\n            const startFrame = typeof caption.frame === \"object\" && caption.frame.start >= 0 ? caption.frame.start : caption.start * fps;\n            const endFrame = typeof caption.frame === \"object\" && caption.frame.end >= 0 ? caption.frame.end : caption.end * fps;\n            const text = caption.text.replace(/\\r?\\n/, \"|\");\n            sub += `{${startFrame}}{${endFrame}}${text}${eol}`;\n            continue;\n        }\n        if (options.verbose) {\n            console.log(\"SKIP:\", caption);\n        }\n    }\n    return sub;\n};\n/**\n * Detects whether the content is in MicroDVD format.\n * @param content The subtitle content\n * @returns Whether it's MicroDVD format\n */\nconst detect = (content) => {\n    /*\n    {7207}{7262}Sister, perfume?\n    */\n    return /^\\{\\d+\\}\\{\\d+\\}.*/.test(content);\n};\nexport default buildHandler({ name: FORMAT_NAME, build, detect, parse });\nexport { FORMAT_NAME as name, build, detect, parse };\n","import { buildHandler } from \"../handler.js\";\nconst FORMAT_NAME = \"vtt\";\nconst helper = {\n    /**\n     * Converts a time string in format of hh:mm:ss.fff or hh:mm:ss,fff to milliseconds.\n     * @param s The time string to convert\n     * @throws {TypeError} If the time string is invalid\n     * @returns Milliseconds\n     */\n    toMilliseconds: (s) => {\n        const match = /^\\s*(\\d{1,2}:)?(\\d{1,2}):(\\d{1,2})(?:[.,](\\d{1,3}))?\\s*$/.exec(s);\n        if (!match) {\n            throw new TypeError(`Invalid time format: ${s}`);\n        }\n        const hh = match[1] ? parseInt(match[1].replace(\":\", \"\")) : 0;\n        const mm = parseInt(match[2], 10);\n        const ss = parseInt(match[3], 10);\n        const ff = match[4] ? parseInt(match[4], 10) : 0;\n        const ms = hh * 3600 * 1000 + mm * 60 * 1000 + ss * 1000 + ff;\n        return ms;\n    },\n    /**\n     * Converts milliseconds to a time string in format of hh:mm:ss.fff.\n     * @param ms Milliseconds\n     * @returns Time string in format of hh:mm:ss.fff\n     */\n    toTimeString: (ms) => {\n        const hh = Math.floor(ms / 1000 / 3600);\n        const mm = Math.floor((ms / 1000 / 60) % 60);\n        const ss = Math.floor((ms / 1000) % 60);\n        const ff = Math.floor(ms % 1000);\n        const time = `${(hh < 10 ? \"0\" : \"\") + hh}:${mm < 10 ? \"0\" : \"\"}${mm}:${ss < 10 ? \"0\" : \"\"}${ss}.${ff < 100 ? \"0\" : \"\"}${ff < 10 ? \"0\" : \"\"}${ff}`;\n        return time;\n    },\n};\n/**\n * Parses captions in WebVTT format (Web Video Text Tracks Format).\n * @param content The subtitle content\n * @param options Parse options\n * @returns Parsed captions\n */\nconst parse = (content, options) => {\n    var _a;\n    let index = 1;\n    const captions = [];\n    const parts = content.split(/\\r?\\n\\s*\\n/);\n    for (const part of parts) {\n        // WebVTT data\n        const regex = /^([^\\r\\n]+\\r?\\n)?((?:\\d{1,2}:)?\\d{1,2}:\\d{1,2}(?:[.,]\\d{1,3})?)\\s*-->\\s*((?:\\d{1,2}:)?\\d{1,2}:\\d{1,2}(?:[.,]\\d{1,3})?)[^\\S\\r\\n]?.*\\r?\\n([\\s\\S]*)$/;\n        const match = regex.exec(part);\n        if (match) {\n            const caption = {};\n            caption.type = \"caption\";\n            caption.index = index++;\n            if (match[1]) {\n                caption.cue = match[1].replace(/[\\r\\n]*/g, \"\");\n            }\n            caption.start = helper.toMilliseconds(match[2]);\n            caption.end = helper.toMilliseconds(match[3]);\n            caption.duration = caption.end - caption.start;\n            caption.content = match[4];\n            caption.text = caption.content\n                .replace(/<[^>]+>/g, \"\") // <b>bold</b> or <i>italic</i>\n                .replace(/\\{[^}]+\\}/g, \"\"); // {b}bold{/b} or {i}italic{/i}\n            captions.push(caption);\n            continue;\n        }\n        // WebVTT meta\n        // FIXME: prevent backtracking\n        // eslint-disable-next-line regexp/no-super-linear-backtracking\n        const meta = (_a = /^([A-Z]+)(\\r?\\n([\\s\\S]*))?$/.exec(part)) !== null && _a !== void 0 ? _a : /^([A-Z]+)\\s+([^\\r\\n]*)$/.exec(part);\n        if (meta) {\n            const caption = {};\n            caption.type = \"meta\";\n            caption.name = meta[1];\n            if (meta[3]) {\n                caption.data = meta[3];\n            }\n            captions.push(caption);\n            continue;\n        }\n        if (options.verbose) {\n            console.warn(\"Unknown part\", part);\n        }\n    }\n    return captions;\n};\n/**\n * Builds captions in WebVTT format (Web Video Text Tracks Format).\n * @param captions The captions to build\n * @param options Build options\n * @returns The built captions string in WebVTT format\n */\nconst build = (captions, options) => {\n    var _a;\n    const eol = (_a = options.eol) !== null && _a !== void 0 ? _a : \"\\r\\n\";\n    let content = `WEBVTT${eol}${eol}`;\n    for (let i = 0; i < captions.length; i++) {\n        const caption = captions[i];\n        if (caption.type === \"meta\") {\n            if (caption.name === \"WEBVTT\") {\n                continue;\n            }\n            content += caption.name + eol;\n            content += typeof caption.data === \"string\" ? caption.data + eol : \"\";\n            content += eol;\n            continue;\n        }\n        if (!caption.type || caption.type === \"caption\") {\n            content += (i + 1).toString() + eol;\n            content += `${helper.toTimeString(caption.start)} --> ${helper.toTimeString(caption.end)}${eol}`;\n            content += caption.text + eol;\n            content += eol;\n            continue;\n        }\n        if (options.verbose) {\n            console.log(\"SKIP:\", caption);\n        }\n    }\n    return content;\n};\n/**\n * Detects whether the content is in WebVTT format.\n * @param content The subtitle content\n * @returns Whether the content is in WebVTT format\n */\nconst detect = (content) => {\n    /*\n    WEBVTT\n    ...\n    */\n    return /^\\s*WEBVTT\\r?\\n/.test(content);\n};\nexport default buildHandler({ name: FORMAT_NAME, build, detect, helper, parse });\nexport { FORMAT_NAME as name, build, detect, helper, parse };\n","import ass from \"./ass.js\";\nimport json from \"./json.js\";\nimport lrc from \"./lrc.js\";\nimport sbv from \"./sbv.js\";\nimport smi from \"./smi.js\";\nimport srt from \"./srt.js\";\nimport ssa from \"./ssa.js\";\nimport sub from \"./sub.js\";\nimport vtt from \"./vtt.js\";\nconst formats = {\n    vtt,\n    lrc,\n    smi,\n    ssa,\n    ass,\n    sub,\n    srt,\n    sbv,\n    json,\n};\nexport default formats;\n","import formats from \"./format/index.js\";\n/**\n * Clones an object.\n * @param obj The object to clone\n * @returns The cloned object\n */\nconst clone = (obj) => JSON.parse(JSON.stringify(obj));\n/**\n * Main subsrt class.\n */\nclass Subsrt {\n    constructor() {\n        this.format = formats;\n        /**\n         * Gets a list of supported subtitle formats.\n         * @returns The list of supported subtitle formats\n         */\n        this.list = () => Object.keys(this.format);\n        /**\n         * Detects a subtitle format from the content.\n         * @param content The subtitle content\n         * @returns The detected format\n         */\n        this.detect = (content) => {\n            const formats = this.list();\n            for (const format of formats) {\n                const handler = this.format[format];\n                if (typeof handler === \"undefined\") {\n                    continue;\n                }\n                if (typeof handler.detect !== \"function\") {\n                    continue;\n                }\n                // Function 'detect' can return true or format name\n                const detected = handler.detect(content);\n                if (detected === true || detected === format) {\n                    return format;\n                }\n            }\n            return \"\";\n        };\n        /**\n         * Parses a subtitle content.\n         * @param content The subtitle content\n         * @param options The parsing options\n         * @throws {TypeError} If the format cannot be determined\n         * @throws {TypeError} If the format is not supported\n         * @throws {TypeError} If the handler does not support 'parse' op\n         * @returns The parsed captions\n         */\n        this.parse = (content, options = {}) => {\n            var _a;\n            const format = (_a = options.format) !== null && _a !== void 0 ? _a : this.detect(content);\n            if (!format || format.trim().length === 0) {\n                throw new TypeError(\"Cannot determine subtitle format\");\n            }\n            const handler = this.format[format];\n            if (typeof handler === \"undefined\") {\n                throw new TypeError(`Unsupported subtitle format: ${format}`);\n            }\n            const func = handler.parse;\n            if (typeof func !== \"function\") {\n                throw new TypeError(`Subtitle format does not support 'parse' op: ${format}`);\n            }\n            return func(content, options);\n        };\n        /**\n         * Builds a subtitle content.\n         * @param captions The captions to build\n         * @param options The building options\n         * @throws {TypeError} If the format cannot be determined\n         * @throws {TypeError} If the format is not supported\n         * @throws {TypeError} If the handler does not support 'build' op\n         * @returns The built subtitle content\n         */\n        this.build = (captions, options = {}) => {\n            const format = options.format || \"srt\";\n            if (!format || format.trim().length === 0) {\n                throw new TypeError(\"Cannot determine subtitle format\");\n            }\n            const handler = this.format[format];\n            if (typeof handler === \"undefined\") {\n                throw new TypeError(`Unsupported subtitle format: ${format}`);\n            }\n            const func = handler.build;\n            if (typeof func !== \"function\") {\n                throw new TypeError(`Subtitle format does not support 'build' op: ${format}`);\n            }\n            return func(captions, options);\n        };\n        /**\n         * Converts subtitle format.\n         * @param content The subtitle content\n         * @param options The conversion options\n         * @returns The converted subtitle content\n         */\n        this.convert = (content, _options = {}) => {\n            var _a;\n            let options = {};\n            if (typeof _options === \"string\") {\n                options.to = _options;\n            }\n            else {\n                options = _options;\n            }\n            const parseOptions = {\n                format: (_a = options.from) !== null && _a !== void 0 ? _a : undefined,\n                verbose: options.verbose,\n                eol: options.eol,\n            };\n            let captions = this.parse(content, parseOptions);\n            if (options.resync) {\n                captions = this.resync(captions, options.resync);\n            }\n            const buildOptions = {\n                format: options.to || options.format,\n                verbose: options.verbose,\n                eol: options.eol,\n            };\n            const result = this.build(captions, buildOptions);\n            return result;\n        };\n        /**\n         * Shifts the time of the captions.\n         * @param captions The captions to resync\n         * @param options The resync options\n         * @throws {TypeError} If the 'options' argument is not defined\n         * @returns The resynced captions\n         */\n        // skipcq: JS-0105\n        this.resync = (captions, options = {}) => {\n            var _a, _b, _c, _d;\n            let func, ratio, frame = false, offset;\n            if (typeof options === \"function\") {\n                func = options; // User's function to handle time shift\n            }\n            else if (typeof options === \"number\") {\n                offset = options; // Time shift (+/- offset)\n                func = (a) => [a[0] + offset, a[1] + offset];\n            }\n            else if (typeof options === \"object\") {\n                offset = ((_a = options.offset) !== null && _a !== void 0 ? _a : 0) * (options.frame ? (_b = options.fps) !== null && _b !== void 0 ? _b : 25 : 1);\n                ratio = (_c = options.ratio) !== null && _c !== void 0 ? _c : 1.0;\n                frame = (_d = options.frame) !== null && _d !== void 0 ? _d : false;\n                func = (a) => [Math.round(a[0] * ratio + offset), Math.round(a[1] * ratio + offset)];\n            }\n            else {\n                throw new TypeError(\"Argument 'options' not defined\");\n            }\n            const resynced = [];\n            for (const _caption of captions) {\n                const caption = clone(_caption);\n                if (!caption.type || caption.type === \"caption\") {\n                    if (frame && caption.frame) {\n                        const shift = func([caption.frame.start, caption.frame.end]);\n                        if (shift && shift.length === 2) {\n                            caption.frame.start = shift[0];\n                            caption.frame.end = shift[1];\n                            caption.frame.count = caption.frame.end - caption.frame.start;\n                        }\n                    }\n                    else {\n                        const shift = func([caption.start, caption.end]);\n                        if (shift && shift.length === 2) {\n                            caption.start = shift[0];\n                            caption.end = shift[1];\n                            caption.duration = caption.end - caption.start;\n                        }\n                    }\n                }\n                resynced.push(caption);\n            }\n            return resynced;\n        };\n    }\n}\nconst subsrt = new Subsrt();\nexport default subsrt;\nexport const { format, list, detect, parse, build, convert, resync } = subsrt;\n","/*! @license DOMPurify 3.2.3 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.3/LICENSE */\n\nconst {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor\n} = Object;\nlet {\n  freeze,\n  seal,\n  create\n} = Object; // eslint-disable-line import/no-mutable-exports\nlet {\n  apply,\n  construct\n} = typeof Reflect !== 'undefined' && Reflect;\nif (!freeze) {\n  freeze = function freeze(x) {\n    return x;\n  };\n}\nif (!seal) {\n  seal = function seal(x) {\n    return x;\n  };\n}\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\nif (!construct) {\n  construct = function construct(Func, args) {\n    return new Func(...args);\n  };\n}\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\nconst objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\nconst regExpTest = unapply(RegExp.prototype.test);\nconst typeErrorCreate = unconstruct(TypeError);\n/**\n * Creates a new function that calls the given function with a specified thisArg and arguments.\n *\n * @param func - The function to be wrapped and called.\n * @returns A new function that calls the given function with a specified thisArg and arguments.\n */\nfunction unapply(func) {\n  return function (thisArg) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return apply(func, thisArg, args);\n  };\n}\n/**\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n *\n * @param func - The constructor function to be wrapped and called.\n * @returns A new function that constructs an instance of the given constructor function with the provided arguments.\n */\nfunction unconstruct(func) {\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return construct(func, args);\n  };\n}\n/**\n * Add properties to a lookup table\n *\n * @param set - The set to which elements will be added.\n * @param array - The array containing elements to be added to the set.\n * @param transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n * @returns The modified set with added elements.\n */\nfunction addToSet(set, array) {\n  let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n        element = lcElement;\n      }\n    }\n    set[element] = true;\n  }\n  return set;\n}\n/**\n * Clean up an array to harden against CSPP\n *\n * @param array - The array to be cleaned.\n * @returns The cleaned version of the array\n */\nfunction cleanArray(array) {\n  for (let index = 0; index < array.length; index++) {\n    const isPropertyExist = objectHasOwnProperty(array, index);\n    if (!isPropertyExist) {\n      array[index] = null;\n    }\n  }\n  return array;\n}\n/**\n * Shallow clone an object\n *\n * @param object - The object to be cloned.\n * @returns A new object that copies the original.\n */\nfunction clone(object) {\n  const newObject = create(null);\n  for (const [property, value] of entries(object)) {\n    const isPropertyExist = objectHasOwnProperty(object, property);\n    if (isPropertyExist) {\n      if (Array.isArray(value)) {\n        newObject[property] = cleanArray(value);\n      } else if (value && typeof value === 'object' && value.constructor === Object) {\n        newObject[property] = clone(value);\n      } else {\n        newObject[property] = value;\n      }\n    }\n  }\n  return newObject;\n}\n/**\n * This method automatically checks if the prop is function or getter and behaves accordingly.\n *\n * @param object - The object to look up the getter function in its prototype chain.\n * @param prop - The property name for which to find the getter function.\n * @returns The getter function found in the prototype chain or a fallback function.\n */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n    object = getPrototypeOf(object);\n  }\n  function fallbackValue() {\n    return null;\n  }\n  return fallbackValue;\n}\n\nconst html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\nconst svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\nconst svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nconst svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\nconst mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nconst mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\nconst text = freeze(['#text']);\n\nconst html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'popover', 'popovertarget', 'popovertargetaction', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'wrap', 'xmlns', 'slot']);\nconst svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'amplitude', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'exponent', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'intercept', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'slope', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'tablevalues', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\nconst mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\nconst xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n// eslint-disable-next-line unicorn/better-regex\nconst MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nconst ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nconst TMPLIT_EXPR = seal(/\\$\\{[\\w\\W]*}/gm); // eslint-disable-line unicorn/better-regex\nconst DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]+$/); // eslint-disable-line no-useless-escape\nconst ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nconst IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nconst IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nconst ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nconst DOCTYPE_NAME = seal(/^html$/i);\nconst CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n\nvar EXPRESSIONS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ARIA_ATTR: ARIA_ATTR,\n  ATTR_WHITESPACE: ATTR_WHITESPACE,\n  CUSTOM_ELEMENT: CUSTOM_ELEMENT,\n  DATA_ATTR: DATA_ATTR,\n  DOCTYPE_NAME: DOCTYPE_NAME,\n  ERB_EXPR: ERB_EXPR,\n  IS_ALLOWED_URI: IS_ALLOWED_URI,\n  IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n  MUSTACHE_EXPR: MUSTACHE_EXPR,\n  TMPLIT_EXPR: TMPLIT_EXPR\n});\n\n/* eslint-disable @typescript-eslint/indent */\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\nconst NODE_TYPE = {\n  element: 1,\n  attribute: 2,\n  text: 3,\n  cdataSection: 4,\n  entityReference: 5,\n  // Deprecated\n  entityNode: 6,\n  // Deprecated\n  progressingInstruction: 7,\n  comment: 8,\n  document: 9,\n  documentType: 10,\n  documentFragment: 11,\n  notation: 12 // Deprecated\n};\nconst getGlobal = function getGlobal() {\n  return typeof window === 'undefined' ? null : window;\n};\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param trustedTypes The policy factory.\n * @param purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\nconst _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n  if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  }\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      }\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\nconst _createHooksMap = function _createHooksMap() {\n  return {\n    afterSanitizeAttributes: [],\n    afterSanitizeElements: [],\n    afterSanitizeShadowDOM: [],\n    beforeSanitizeAttributes: [],\n    beforeSanitizeElements: [],\n    beforeSanitizeShadowDOM: [],\n    uponSanitizeAttribute: [],\n    uponSanitizeElement: [],\n    uponSanitizeShadowNode: []\n  };\n};\nfunction createDOMPurify() {\n  let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n  const DOMPurify = root => createDOMPurify(root);\n  DOMPurify.version = '3.2.3';\n  DOMPurify.removed = [];\n  if (!window || !window.document || window.document.nodeType !== NODE_TYPE.document) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n    return DOMPurify;\n  }\n  let {\n    document\n  } = window;\n  const originalDocument = document;\n  const currentScript = originalDocument.currentScript;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes\n  } = window;\n  const ElementPrototype = Element.prototype;\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const remove = lookupGetter(ElementPrototype, 'remove');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName\n  } = document;\n  const {\n    importNode\n  } = originalDocument;\n  let hooks = _createHooksMap();\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n    CUSTOM_ELEMENT\n  } = EXPRESSIONS;\n  let {\n    IS_ALLOWED_URI: IS_ALLOWED_URI$1\n  } = EXPRESSIONS;\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n  /*\n   * Configure how DOMPurify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n    tagNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    attributeNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    allowCustomizedBuiltInElements: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: false\n    }\n  }));\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n  /* Output should be safe even for XML used within HTML and alike.\n   * This means, DOMPurify removes comments when containing risky content.\n   */\n  let SAFE_FOR_XML = true;\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n  let MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n  let HTML_INTEGRATION_POINTS = addToSet({}, ['annotation-xml']);\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE = null;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc = null;\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n  const formElement = document.createElement('form');\n  const isRegexOrFunction = function isRegexOrFunction(testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n  /**\n   * _parseConfig\n   *\n   * @param cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function _parseConfig() {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n    PARSER_MEDIA_TYPE =\n    // eslint-disable-next-line unicorn/prefer-includes\n    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n    /* Set configuration parameters */\n    ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR, transformCaseFunc) : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS, transformCaseFunc) : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n    FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n    USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    MATHML_TEXT_INTEGRATION_POINTS = cfg.MATHML_TEXT_INTEGRATION_POINTS || MATHML_TEXT_INTEGRATION_POINTS;\n    HTML_INTEGRATION_POINTS = cfg.HTML_INTEGRATION_POINTS || HTML_INTEGRATION_POINTS;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, text);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html$1);\n        addToSet(ALLOWED_ATTR, html);\n      }\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg$1);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl$1);\n        addToSet(ALLOWED_ATTR, mathMl);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n      }\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n      }\n      // Overwrite existing TrustedTypes policy.\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n      // Sign local variables required by `sanitize`.\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n      }\n      // If creating the internal policy succeeded sign internal variables.\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    }\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n    CONFIG = cfg;\n  };\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n  const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n  /**\n   * @param element a DOM element whose namespace is being checked\n   * @returns Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function _checkValidNamespace(element) {\n    let parent = getParentNode(element);\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template'\n      };\n    }\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n      }\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n    }\n    // For XHTML and XML documents that support custom namespaces\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return true;\n    }\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n  /**\n   * _forceRemove\n   *\n   * @param node a DOM node\n   */\n  const _forceRemove = function _forceRemove(node) {\n    arrayPush(DOMPurify.removed, {\n      element: node\n    });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      getParentNode(node).removeChild(node);\n    } catch (_) {\n      remove(node);\n    }\n  };\n  /**\n   * _removeAttribute\n   *\n   * @param name an Attribute name\n   * @param element a DOM node\n   */\n  const _removeAttribute = function _removeAttribute(name, element) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: element.getAttributeNode(name),\n        from: element\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: element\n      });\n    }\n    element.removeAttribute(name);\n    // We void attribute values for unremovable \"is\" attributes\n    if (name === 'is') {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(element);\n        } catch (_) {}\n      } else {\n        try {\n          element.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n  /**\n   * _initDocument\n   *\n   * @param dirty - a string of dirty markup\n   * @return a DOM, filled with the dirty markup\n   */\n  const _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    let doc = null;\n    let leadingWhitespace = null;\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n    }\n    const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n    const body = doc.body || doc.documentElement;\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n    }\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    }\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n  /**\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n   *\n   * @param root The root element or node to start traversing on.\n   * @return The created NodeIterator\n   */\n  const _createNodeIterator = function _createNodeIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root,\n    // eslint-disable-next-line no-bitwise\n    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null);\n  };\n  /**\n   * _isClobbered\n   *\n   * @param element element to check for clobbering attacks\n   * @return true if clobbered, false if safe\n   */\n  const _isClobbered = function _isClobbered(element) {\n    return element instanceof HTMLFormElement && (typeof element.nodeName !== 'string' || typeof element.textContent !== 'string' || typeof element.removeChild !== 'function' || !(element.attributes instanceof NamedNodeMap) || typeof element.removeAttribute !== 'function' || typeof element.setAttribute !== 'function' || typeof element.namespaceURI !== 'string' || typeof element.insertBefore !== 'function' || typeof element.hasChildNodes !== 'function');\n  };\n  /**\n   * Checks whether the given object is a DOM node.\n   *\n   * @param value object to check whether it's a DOM node\n   * @return true is object is a DOM node\n   */\n  const _isNode = function _isNode(value) {\n    return typeof Node === 'function' && value instanceof Node;\n  };\n  function _executeHooks(hooks, currentNode, data) {\n    arrayForEach(hooks, hook => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  }\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   * @param currentNode to check for permission to exist\n   * @return true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function _sanitizeElements(currentNode) {\n    let content = null;\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeElements, currentNode, null);\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n    /* Execute a hook if present */\n    _executeHooks(hooks.uponSanitizeElement, currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any occurrence of processing instructions */\n    if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any kind of possibly harmful comments */\n    if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\\w]/g, currentNode.data)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n          return false;\n        }\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n          return false;\n        }\n      }\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n          for (let i = childCount - 1; i >= 0; --i) {\n            const childClone = cloneNode(childNodes[i], true);\n            childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n            parentNode.insertBefore(childClone, getNextSibling(currentNode));\n          }\n        }\n      }\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        content = stringReplace(content, expr, ' ');\n      });\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, {\n          element: currentNode.cloneNode()\n        });\n        currentNode.textContent = content;\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeElements, currentNode, null);\n    return false;\n  };\n  /**\n   * _isValidAttribute\n   *\n   * @param lcTag Lowercase tag name of containing element.\n   * @param lcName Lowercase attribute name.\n   * @param value Attribute value.\n   * @return Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n      // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n      // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n      _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n      // Alternative, second condition checks if it's an `is`-attribute, AND\n      // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n      return false;\n    } else ;\n    return true;\n  };\n  /**\n   * _isBasicCustomElement\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   *\n   * @param tagName name of the tag of the node to sanitize\n   * @returns Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n   */\n  const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n    return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n  };\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param currentNode to sanitize\n   */\n  const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeAttributes, currentNode, null);\n    const {\n      attributes\n    } = currentNode;\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes || _isClobbered(currentNode)) {\n      return;\n    }\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n      forceKeepAttr: undefined\n    };\n    let l = attributes.length;\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      const attr = attributes[l];\n      const {\n        name,\n        namespaceURI,\n        value: attrValue\n      } = attr;\n      const lcName = transformCaseFunc(name);\n      let value = name === 'value' ? attrValue : stringTrim(attrValue);\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHooks(hooks.uponSanitizeAttribute, currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n      /* Work around a security issue with comments inside attributes */\n      if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          value = stringReplace(value, expr, ' ');\n        });\n      }\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n      /* Handle attributes that require Trusted Types */\n      if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n        if (namespaceURI) ; else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              {\n                value = trustedTypesPolicy.createHTML(value);\n                break;\n              }\n            case 'TrustedScriptURL':\n              {\n                value = trustedTypesPolicy.createScriptURL(value);\n                break;\n              }\n          }\n        }\n      }\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n        if (_isClobbered(currentNode)) {\n          _forceRemove(currentNode);\n        } else {\n          arrayPop(DOMPurify.removed);\n        }\n      } catch (_) {}\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeAttributes, currentNode, null);\n  };\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    let shadowNode = null;\n    const shadowIterator = _createNodeIterator(fragment);\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeShadowDOM, fragment, null);\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHooks(hooks.uponSanitizeShadowNode, shadowNode, null);\n      /* Sanitize tags and elements */\n      _sanitizeElements(shadowNode);\n      /* Check attributes next */\n      _sanitizeAttributes(shadowNode);\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeShadowDOM, fragment, null);\n  };\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty) {\n    let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let body = null;\n    let importedNode = null;\n    let currentNode = null;\n    let returnNode = null;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n      // eslint-disable-next-line unicorn/prefer-includes\n      dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n    /* Get node iterator */\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n    /* Now start iterating over the created document */\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Sanitize tags and elements */\n      _sanitizeElements(currentNode);\n      /* Check attributes next */\n      _sanitizeAttributes(currentNode);\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n    }\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n      return returnNode;\n    }\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n    /* Serialize doctype if allowed */\n    if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n      serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\n      });\n    }\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n  DOMPurify.setConfig = function () {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n  DOMPurify.removeHook = function (entryPoint) {\n    return arrayPop(hooks[entryPoint]);\n  };\n  DOMPurify.removeHooks = function (entryPoint) {\n    hooks[entryPoint] = [];\n  };\n  DOMPurify.removeAllHooks = function () {\n    hooks = _createHooksMap();\n  };\n  return DOMPurify;\n}\nvar purify = createDOMPurify();\n\nexport { purify as default };\n//# sourceMappingURL=purify.es.mjs.map\n","/**\n * Fuse.js v7.0.0 - Lightweight fuzzy-search (http://fusejs.io)\n *\n * Copyright (c) 2023 Kiro Risk (http://kiro.me)\n * All Rights Reserved. Apache Software License 2.0\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n */\n\nfunction isArray(value) {\n  return !Array.isArray\n    ? getTag(value) === '[object Array]'\n    : Array.isArray(value)\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/baseToString.js\nconst INFINITY = 1 / 0;\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value\n  }\n  let result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result\n}\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value)\n}\n\nfunction isString(value) {\n  return typeof value === 'string'\n}\n\nfunction isNumber(value) {\n  return typeof value === 'number'\n}\n\n// Adapted from: https://github.com/lodash/lodash/blob/master/isBoolean.js\nfunction isBoolean(value) {\n  return (\n    value === true ||\n    value === false ||\n    (isObjectLike(value) && getTag(value) == '[object Boolean]')\n  )\n}\n\nfunction isObject(value) {\n  return typeof value === 'object'\n}\n\n// Checks if `value` is object-like.\nfunction isObjectLike(value) {\n  return isObject(value) && value !== null\n}\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null\n}\n\nfunction isBlank(value) {\n  return !value.trim().length\n}\n\n// Gets the `toStringTag` of `value`.\n// Adapted from: https://github.com/lodash/lodash/blob/master/.internal/getTag.js\nfunction getTag(value) {\n  return value == null\n    ? value === undefined\n      ? '[object Undefined]'\n      : '[object Null]'\n    : Object.prototype.toString.call(value)\n}\n\nconst EXTENDED_SEARCH_UNAVAILABLE = 'Extended search is not available';\n\nconst INCORRECT_INDEX_TYPE = \"Incorrect 'index' type\";\n\nconst LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY = (key) =>\n  `Invalid value for key ${key}`;\n\nconst PATTERN_LENGTH_TOO_LARGE = (max) =>\n  `Pattern length exceeds max of ${max}.`;\n\nconst MISSING_KEY_PROPERTY = (name) => `Missing ${name} property in key`;\n\nconst INVALID_KEY_WEIGHT_VALUE = (key) =>\n  `Property 'weight' in key '${key}' must be a positive integer`;\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nclass KeyStore {\n  constructor(keys) {\n    this._keys = [];\n    this._keyMap = {};\n\n    let totalWeight = 0;\n\n    keys.forEach((key) => {\n      let obj = createKey(key);\n\n      this._keys.push(obj);\n      this._keyMap[obj.id] = obj;\n\n      totalWeight += obj.weight;\n    });\n\n    // Normalize weights so that their sum is equal to 1\n    this._keys.forEach((key) => {\n      key.weight /= totalWeight;\n    });\n  }\n  get(keyId) {\n    return this._keyMap[keyId]\n  }\n  keys() {\n    return this._keys\n  }\n  toJSON() {\n    return JSON.stringify(this._keys)\n  }\n}\n\nfunction createKey(key) {\n  let path = null;\n  let id = null;\n  let src = null;\n  let weight = 1;\n  let getFn = null;\n\n  if (isString(key) || isArray(key)) {\n    src = key;\n    path = createKeyPath(key);\n    id = createKeyId(key);\n  } else {\n    if (!hasOwn.call(key, 'name')) {\n      throw new Error(MISSING_KEY_PROPERTY('name'))\n    }\n\n    const name = key.name;\n    src = name;\n\n    if (hasOwn.call(key, 'weight')) {\n      weight = key.weight;\n\n      if (weight <= 0) {\n        throw new Error(INVALID_KEY_WEIGHT_VALUE(name))\n      }\n    }\n\n    path = createKeyPath(name);\n    id = createKeyId(name);\n    getFn = key.getFn;\n  }\n\n  return { path, id, weight, src, getFn }\n}\n\nfunction createKeyPath(key) {\n  return isArray(key) ? key : key.split('.')\n}\n\nfunction createKeyId(key) {\n  return isArray(key) ? key.join('.') : key\n}\n\nfunction get(obj, path) {\n  let list = [];\n  let arr = false;\n\n  const deepGet = (obj, path, index) => {\n    if (!isDefined(obj)) {\n      return\n    }\n    if (!path[index]) {\n      // If there's no path left, we've arrived at the object we care about.\n      list.push(obj);\n    } else {\n      let key = path[index];\n\n      const value = obj[key];\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      // If we're at the last value in the path, and if it's a string/number/bool,\n      // add it to the list\n      if (\n        index === path.length - 1 &&\n        (isString(value) || isNumber(value) || isBoolean(value))\n      ) {\n        list.push(toString(value));\n      } else if (isArray(value)) {\n        arr = true;\n        // Search each item in the array.\n        for (let i = 0, len = value.length; i < len; i += 1) {\n          deepGet(value[i], path, index + 1);\n        }\n      } else if (path.length) {\n        // An object. Recurse further.\n        deepGet(value, path, index + 1);\n      }\n    }\n  };\n\n  // Backwards compatibility (since path used to be a string)\n  deepGet(obj, isString(path) ? path.split('.') : path, 0);\n\n  return arr ? list : list[0]\n}\n\nconst MatchOptions = {\n  // Whether the matches should be included in the result set. When `true`, each record in the result\n  // set will include the indices of the matched characters.\n  // These can consequently be used for highlighting purposes.\n  includeMatches: false,\n  // When `true`, the matching function will continue to the end of a search pattern even if\n  // a perfect match has already been located in the string.\n  findAllMatches: false,\n  // Minimum number of characters that must be matched before a result is considered a match\n  minMatchCharLength: 1\n};\n\nconst BasicOptions = {\n  // When `true`, the algorithm continues searching to the end of the input even if a perfect\n  // match is found before the end of the same input.\n  isCaseSensitive: false,\n  // When true, the matching function will continue to the end of a search pattern even if\n  includeScore: false,\n  // List of properties that will be searched. This also supports nested properties.\n  keys: [],\n  // Whether to sort the result list, by score\n  shouldSort: true,\n  // Default sort function: sort by ascending score, ascending index\n  sortFn: (a, b) =>\n    a.score === b.score ? (a.idx < b.idx ? -1 : 1) : a.score < b.score ? -1 : 1\n};\n\nconst FuzzyOptions = {\n  // Approximately where in the text is the pattern expected to be found?\n  location: 0,\n  // At what point does the match algorithm give up. A threshold of '0.0' requires a perfect match\n  // (of both letters and location), a threshold of '1.0' would match anything.\n  threshold: 0.6,\n  // Determines how close the match must be to the fuzzy location (specified above).\n  // An exact letter match which is 'distance' characters away from the fuzzy location\n  // would score as a complete mismatch. A distance of '0' requires the match be at\n  // the exact location specified, a threshold of '1000' would require a perfect match\n  // to be within 800 characters of the fuzzy location to be found using a 0.8 threshold.\n  distance: 100\n};\n\nconst AdvancedOptions = {\n  // When `true`, it enables the use of unix-like search commands\n  useExtendedSearch: false,\n  // The get function to use when fetching an object's properties.\n  // The default will search nested paths *ie foo.bar.baz*\n  getFn: get,\n  // When `true`, search will ignore `location` and `distance`, so it won't matter\n  // where in the string the pattern appears.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#fuzziness-score\n  ignoreLocation: false,\n  // When `true`, the calculation for the relevance score (used for sorting) will\n  // ignore the field-length norm.\n  // More info: https://fusejs.io/concepts/scoring-theory.html#field-length-norm\n  ignoreFieldNorm: false,\n  // The weight to determine how much field length norm effects scoring.\n  fieldNormWeight: 1\n};\n\nvar Config = {\n  ...BasicOptions,\n  ...MatchOptions,\n  ...FuzzyOptions,\n  ...AdvancedOptions\n};\n\nconst SPACE = /[^ ]+/g;\n\n// Field-length norm: the shorter the field, the higher the weight.\n// Set to 3 decimals to reduce index size.\nfunction norm(weight = 1, mantissa = 3) {\n  const cache = new Map();\n  const m = Math.pow(10, mantissa);\n\n  return {\n    get(value) {\n      const numTokens = value.match(SPACE).length;\n\n      if (cache.has(numTokens)) {\n        return cache.get(numTokens)\n      }\n\n      // Default function is 1/sqrt(x), weight makes that variable\n      const norm = 1 / Math.pow(numTokens, 0.5 * weight);\n\n      // In place of `toFixed(mantissa)`, for faster computation\n      const n = parseFloat(Math.round(norm * m) / m);\n\n      cache.set(numTokens, n);\n\n      return n\n    },\n    clear() {\n      cache.clear();\n    }\n  }\n}\n\nclass FuseIndex {\n  constructor({\n    getFn = Config.getFn,\n    fieldNormWeight = Config.fieldNormWeight\n  } = {}) {\n    this.norm = norm(fieldNormWeight, 3);\n    this.getFn = getFn;\n    this.isCreated = false;\n\n    this.setIndexRecords();\n  }\n  setSources(docs = []) {\n    this.docs = docs;\n  }\n  setIndexRecords(records = []) {\n    this.records = records;\n  }\n  setKeys(keys = []) {\n    this.keys = keys;\n    this._keysMap = {};\n    keys.forEach((key, idx) => {\n      this._keysMap[key.id] = idx;\n    });\n  }\n  create() {\n    if (this.isCreated || !this.docs.length) {\n      return\n    }\n\n    this.isCreated = true;\n\n    // List is Array<String>\n    if (isString(this.docs[0])) {\n      this.docs.forEach((doc, docIndex) => {\n        this._addString(doc, docIndex);\n      });\n    } else {\n      // List is Array<Object>\n      this.docs.forEach((doc, docIndex) => {\n        this._addObject(doc, docIndex);\n      });\n    }\n\n    this.norm.clear();\n  }\n  // Adds a doc to the end of the index\n  add(doc) {\n    const idx = this.size();\n\n    if (isString(doc)) {\n      this._addString(doc, idx);\n    } else {\n      this._addObject(doc, idx);\n    }\n  }\n  // Removes the doc at the specified index of the index\n  removeAt(idx) {\n    this.records.splice(idx, 1);\n\n    // Change ref index of every subsquent doc\n    for (let i = idx, len = this.size(); i < len; i += 1) {\n      this.records[i].i -= 1;\n    }\n  }\n  getValueForItemAtKeyId(item, keyId) {\n    return item[this._keysMap[keyId]]\n  }\n  size() {\n    return this.records.length\n  }\n  _addString(doc, docIndex) {\n    if (!isDefined(doc) || isBlank(doc)) {\n      return\n    }\n\n    let record = {\n      v: doc,\n      i: docIndex,\n      n: this.norm.get(doc)\n    };\n\n    this.records.push(record);\n  }\n  _addObject(doc, docIndex) {\n    let record = { i: docIndex, $: {} };\n\n    // Iterate over every key (i.e, path), and fetch the value at that key\n    this.keys.forEach((key, keyIndex) => {\n      let value = key.getFn ? key.getFn(doc) : this.getFn(doc, key.path);\n\n      if (!isDefined(value)) {\n        return\n      }\n\n      if (isArray(value)) {\n        let subRecords = [];\n        const stack = [{ nestedArrIndex: -1, value }];\n\n        while (stack.length) {\n          const { nestedArrIndex, value } = stack.pop();\n\n          if (!isDefined(value)) {\n            continue\n          }\n\n          if (isString(value) && !isBlank(value)) {\n            let subRecord = {\n              v: value,\n              i: nestedArrIndex,\n              n: this.norm.get(value)\n            };\n\n            subRecords.push(subRecord);\n          } else if (isArray(value)) {\n            value.forEach((item, k) => {\n              stack.push({\n                nestedArrIndex: k,\n                value: item\n              });\n            });\n          } else ;\n        }\n        record.$[keyIndex] = subRecords;\n      } else if (isString(value) && !isBlank(value)) {\n        let subRecord = {\n          v: value,\n          n: this.norm.get(value)\n        };\n\n        record.$[keyIndex] = subRecord;\n      }\n    });\n\n    this.records.push(record);\n  }\n  toJSON() {\n    return {\n      keys: this.keys,\n      records: this.records\n    }\n  }\n}\n\nfunction createIndex(\n  keys,\n  docs,\n  { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}\n) {\n  const myIndex = new FuseIndex({ getFn, fieldNormWeight });\n  myIndex.setKeys(keys.map(createKey));\n  myIndex.setSources(docs);\n  myIndex.create();\n  return myIndex\n}\n\nfunction parseIndex(\n  data,\n  { getFn = Config.getFn, fieldNormWeight = Config.fieldNormWeight } = {}\n) {\n  const { keys, records } = data;\n  const myIndex = new FuseIndex({ getFn, fieldNormWeight });\n  myIndex.setKeys(keys);\n  myIndex.setIndexRecords(records);\n  return myIndex\n}\n\nfunction computeScore$1(\n  pattern,\n  {\n    errors = 0,\n    currentLocation = 0,\n    expectedLocation = 0,\n    distance = Config.distance,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  const accuracy = errors / pattern.length;\n\n  if (ignoreLocation) {\n    return accuracy\n  }\n\n  const proximity = Math.abs(expectedLocation - currentLocation);\n\n  if (!distance) {\n    // Dodge divide by zero error.\n    return proximity ? 1.0 : accuracy\n  }\n\n  return accuracy + proximity / distance\n}\n\nfunction convertMaskToIndices(\n  matchmask = [],\n  minMatchCharLength = Config.minMatchCharLength\n) {\n  let indices = [];\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (let len = matchmask.length; i < len; i += 1) {\n    let match = matchmask[i];\n    if (match && start === -1) {\n      start = i;\n    } else if (!match && start !== -1) {\n      end = i - 1;\n      if (end - start + 1 >= minMatchCharLength) {\n        indices.push([start, end]);\n      }\n      start = -1;\n    }\n  }\n\n  // (i-1 - start) + 1 => i - start\n  if (matchmask[i - 1] && i - start >= minMatchCharLength) {\n    indices.push([start, i - 1]);\n  }\n\n  return indices\n}\n\n// Machine word size\nconst MAX_BITS = 32;\n\nfunction search(\n  text,\n  pattern,\n  patternAlphabet,\n  {\n    location = Config.location,\n    distance = Config.distance,\n    threshold = Config.threshold,\n    findAllMatches = Config.findAllMatches,\n    minMatchCharLength = Config.minMatchCharLength,\n    includeMatches = Config.includeMatches,\n    ignoreLocation = Config.ignoreLocation\n  } = {}\n) {\n  if (pattern.length > MAX_BITS) {\n    throw new Error(PATTERN_LENGTH_TOO_LARGE(MAX_BITS))\n  }\n\n  const patternLen = pattern.length;\n  // Set starting location at beginning text and initialize the alphabet.\n  const textLen = text.length;\n  // Handle the case when location > text.length\n  const expectedLocation = Math.max(0, Math.min(location, textLen));\n  // Highest score beyond which we give up.\n  let currentThreshold = threshold;\n  // Is there a nearby exact match? (speedup)\n  let bestLocation = expectedLocation;\n\n  // Performance: only computer matches when the minMatchCharLength > 1\n  // OR if `includeMatches` is true.\n  const computeMatches = minMatchCharLength > 1 || includeMatches;\n  // A mask of the matches, used for building the indices\n  const matchMask = computeMatches ? Array(textLen) : [];\n\n  let index;\n\n  // Get all exact matches, here for speed up\n  while ((index = text.indexOf(pattern, bestLocation)) > -1) {\n    let score = computeScore$1(pattern, {\n      currentLocation: index,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    currentThreshold = Math.min(score, currentThreshold);\n    bestLocation = index + patternLen;\n\n    if (computeMatches) {\n      let i = 0;\n      while (i < patternLen) {\n        matchMask[index + i] = 1;\n        i += 1;\n      }\n    }\n  }\n\n  // Reset the best location\n  bestLocation = -1;\n\n  let lastBitArr = [];\n  let finalScore = 1;\n  let binMax = patternLen + textLen;\n\n  const mask = 1 << (patternLen - 1);\n\n  for (let i = 0; i < patternLen; i += 1) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from the match location we can stray\n    // at this error level.\n    let binMin = 0;\n    let binMid = binMax;\n\n    while (binMin < binMid) {\n      const score = computeScore$1(pattern, {\n        errors: i,\n        currentLocation: expectedLocation + binMid,\n        expectedLocation,\n        distance,\n        ignoreLocation\n      });\n\n      if (score <= currentThreshold) {\n        binMin = binMid;\n      } else {\n        binMax = binMid;\n      }\n\n      binMid = Math.floor((binMax - binMin) / 2 + binMin);\n    }\n\n    // Use the result from this iteration as the maximum for the next.\n    binMax = binMid;\n\n    let start = Math.max(1, expectedLocation - binMid + 1);\n    let finish = findAllMatches\n      ? textLen\n      : Math.min(expectedLocation + binMid, textLen) + patternLen;\n\n    // Initialize the bit array\n    let bitArr = Array(finish + 2);\n\n    bitArr[finish + 1] = (1 << i) - 1;\n\n    for (let j = finish; j >= start; j -= 1) {\n      let currentLocation = j - 1;\n      let charMatch = patternAlphabet[text.charAt(currentLocation)];\n\n      if (computeMatches) {\n        // Speed up: quick bool to int conversion (i.e, `charMatch ? 1 : 0`)\n        matchMask[currentLocation] = +!!charMatch;\n      }\n\n      // First pass: exact match\n      bitArr[j] = ((bitArr[j + 1] << 1) | 1) & charMatch;\n\n      // Subsequent passes: fuzzy match\n      if (i) {\n        bitArr[j] |=\n          ((lastBitArr[j + 1] | lastBitArr[j]) << 1) | 1 | lastBitArr[j + 1];\n      }\n\n      if (bitArr[j] & mask) {\n        finalScore = computeScore$1(pattern, {\n          errors: i,\n          currentLocation,\n          expectedLocation,\n          distance,\n          ignoreLocation\n        });\n\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (finalScore <= currentThreshold) {\n          // Indeed it is\n          currentThreshold = finalScore;\n          bestLocation = currentLocation;\n\n          // Already passed `loc`, downhill from here on in.\n          if (bestLocation <= expectedLocation) {\n            break\n          }\n\n          // When passing `bestLocation`, don't exceed our current distance from `expectedLocation`.\n          start = Math.max(1, 2 * expectedLocation - bestLocation);\n        }\n      }\n    }\n\n    // No hope for a (better) match at greater error levels.\n    const score = computeScore$1(pattern, {\n      errors: i + 1,\n      currentLocation: expectedLocation,\n      expectedLocation,\n      distance,\n      ignoreLocation\n    });\n\n    if (score > currentThreshold) {\n      break\n    }\n\n    lastBitArr = bitArr;\n  }\n\n  const result = {\n    isMatch: bestLocation >= 0,\n    // Count exact matches (those with a score of 0) to be \"almost\" exact\n    score: Math.max(0.001, finalScore)\n  };\n\n  if (computeMatches) {\n    const indices = convertMaskToIndices(matchMask, minMatchCharLength);\n    if (!indices.length) {\n      result.isMatch = false;\n    } else if (includeMatches) {\n      result.indices = indices;\n    }\n  }\n\n  return result\n}\n\nfunction createPatternAlphabet(pattern) {\n  let mask = {};\n\n  for (let i = 0, len = pattern.length; i < len; i += 1) {\n    const char = pattern.charAt(i);\n    mask[char] = (mask[char] || 0) | (1 << (len - i - 1));\n  }\n\n  return mask\n}\n\nclass BitapSearch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    this.options = {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreLocation\n    };\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n\n    this.chunks = [];\n\n    if (!this.pattern.length) {\n      return\n    }\n\n    const addChunk = (pattern, startIndex) => {\n      this.chunks.push({\n        pattern,\n        alphabet: createPatternAlphabet(pattern),\n        startIndex\n      });\n    };\n\n    const len = this.pattern.length;\n\n    if (len > MAX_BITS) {\n      let i = 0;\n      const remainder = len % MAX_BITS;\n      const end = len - remainder;\n\n      while (i < end) {\n        addChunk(this.pattern.substr(i, MAX_BITS), i);\n        i += MAX_BITS;\n      }\n\n      if (remainder) {\n        const startIndex = len - MAX_BITS;\n        addChunk(this.pattern.substr(startIndex), startIndex);\n      }\n    } else {\n      addChunk(this.pattern, 0);\n    }\n  }\n\n  searchIn(text) {\n    const { isCaseSensitive, includeMatches } = this.options;\n\n    if (!isCaseSensitive) {\n      text = text.toLowerCase();\n    }\n\n    // Exact match\n    if (this.pattern === text) {\n      let result = {\n        isMatch: true,\n        score: 0\n      };\n\n      if (includeMatches) {\n        result.indices = [[0, text.length - 1]];\n      }\n\n      return result\n    }\n\n    // Otherwise, use Bitap algorithm\n    const {\n      location,\n      distance,\n      threshold,\n      findAllMatches,\n      minMatchCharLength,\n      ignoreLocation\n    } = this.options;\n\n    let allIndices = [];\n    let totalScore = 0;\n    let hasMatches = false;\n\n    this.chunks.forEach(({ pattern, alphabet, startIndex }) => {\n      const { isMatch, score, indices } = search(text, pattern, alphabet, {\n        location: location + startIndex,\n        distance,\n        threshold,\n        findAllMatches,\n        minMatchCharLength,\n        includeMatches,\n        ignoreLocation\n      });\n\n      if (isMatch) {\n        hasMatches = true;\n      }\n\n      totalScore += score;\n\n      if (isMatch && indices) {\n        allIndices = [...allIndices, ...indices];\n      }\n    });\n\n    let result = {\n      isMatch: hasMatches,\n      score: hasMatches ? totalScore / this.chunks.length : 1\n    };\n\n    if (hasMatches && includeMatches) {\n      result.indices = allIndices;\n    }\n\n    return result\n  }\n}\n\nclass BaseMatch {\n  constructor(pattern) {\n    this.pattern = pattern;\n  }\n  static isMultiMatch(pattern) {\n    return getMatch(pattern, this.multiRegex)\n  }\n  static isSingleMatch(pattern) {\n    return getMatch(pattern, this.singleRegex)\n  }\n  search(/*text*/) {}\n}\n\nfunction getMatch(pattern, exp) {\n  const matches = pattern.match(exp);\n  return matches ? matches[1] : null\n}\n\n// Token: 'file\n\nclass ExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'exact'\n  }\n  static get multiRegex() {\n    return /^=\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^=(.*)$/\n  }\n  search(text) {\n    const isMatch = text === this.pattern;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !fire\n\nclass InverseExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!(.*)$/\n  }\n  search(text) {\n    const index = text.indexOf(this.pattern);\n    const isMatch = index === -1;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: ^file\n\nclass PrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'prefix-exact'\n  }\n  static get multiRegex() {\n    return /^\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, this.pattern.length - 1]\n    }\n  }\n}\n\n// Token: !^fire\n\nclass InversePrefixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-prefix-exact'\n  }\n  static get multiRegex() {\n    return /^!\\^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^!\\^(.*)$/\n  }\n  search(text) {\n    const isMatch = !text.startsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\n// Token: .file$\n\nclass SuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'suffix-exact'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = text.endsWith(this.pattern);\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [text.length - this.pattern.length, text.length - 1]\n    }\n  }\n}\n\n// Token: !.file$\n\nclass InverseSuffixExactMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'inverse-suffix-exact'\n  }\n  static get multiRegex() {\n    return /^!\"(.*)\"\\$$/\n  }\n  static get singleRegex() {\n    return /^!(.*)\\$$/\n  }\n  search(text) {\n    const isMatch = !text.endsWith(this.pattern);\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices: [0, text.length - 1]\n    }\n  }\n}\n\nclass FuzzyMatch extends BaseMatch {\n  constructor(\n    pattern,\n    {\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance,\n      includeMatches = Config.includeMatches,\n      findAllMatches = Config.findAllMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      isCaseSensitive = Config.isCaseSensitive,\n      ignoreLocation = Config.ignoreLocation\n    } = {}\n  ) {\n    super(pattern);\n    this._bitapSearch = new BitapSearch(pattern, {\n      location,\n      threshold,\n      distance,\n      includeMatches,\n      findAllMatches,\n      minMatchCharLength,\n      isCaseSensitive,\n      ignoreLocation\n    });\n  }\n  static get type() {\n    return 'fuzzy'\n  }\n  static get multiRegex() {\n    return /^\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^(.*)$/\n  }\n  search(text) {\n    return this._bitapSearch.searchIn(text)\n  }\n}\n\n// Token: 'file\n\nclass IncludeMatch extends BaseMatch {\n  constructor(pattern) {\n    super(pattern);\n  }\n  static get type() {\n    return 'include'\n  }\n  static get multiRegex() {\n    return /^'\"(.*)\"$/\n  }\n  static get singleRegex() {\n    return /^'(.*)$/\n  }\n  search(text) {\n    let location = 0;\n    let index;\n\n    const indices = [];\n    const patternLen = this.pattern.length;\n\n    // Get all exact matches\n    while ((index = text.indexOf(this.pattern, location)) > -1) {\n      location = index + patternLen;\n      indices.push([index, location - 1]);\n    }\n\n    const isMatch = !!indices.length;\n\n    return {\n      isMatch,\n      score: isMatch ? 0 : 1,\n      indices\n    }\n  }\n}\n\n// ❗Order is important. DO NOT CHANGE.\nconst searchers = [\n  ExactMatch,\n  IncludeMatch,\n  PrefixExactMatch,\n  InversePrefixExactMatch,\n  InverseSuffixExactMatch,\n  SuffixExactMatch,\n  InverseExactMatch,\n  FuzzyMatch\n];\n\nconst searchersLen = searchers.length;\n\n// Regex to split by spaces, but keep anything in quotes together\nconst SPACE_RE = / +(?=(?:[^\\\"]*\\\"[^\\\"]*\\\")*[^\\\"]*$)/;\nconst OR_TOKEN = '|';\n\n// Return a 2D array representation of the query, for simpler parsing.\n// Example:\n// \"^core go$ | rb$ | py$ xy$\" => [[\"^core\", \"go$\"], [\"rb$\"], [\"py$\", \"xy$\"]]\nfunction parseQuery(pattern, options = {}) {\n  return pattern.split(OR_TOKEN).map((item) => {\n    let query = item\n      .trim()\n      .split(SPACE_RE)\n      .filter((item) => item && !!item.trim());\n\n    let results = [];\n    for (let i = 0, len = query.length; i < len; i += 1) {\n      const queryItem = query[i];\n\n      // 1. Handle multiple query match (i.e, once that are quoted, like `\"hello world\"`)\n      let found = false;\n      let idx = -1;\n      while (!found && ++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isMultiMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          found = true;\n        }\n      }\n\n      if (found) {\n        continue\n      }\n\n      // 2. Handle single query matches (i.e, once that are *not* quoted)\n      idx = -1;\n      while (++idx < searchersLen) {\n        const searcher = searchers[idx];\n        let token = searcher.isSingleMatch(queryItem);\n        if (token) {\n          results.push(new searcher(token, options));\n          break\n        }\n      }\n    }\n\n    return results\n  })\n}\n\n// These extended matchers can return an array of matches, as opposed\n// to a singl match\nconst MultiMatchSet = new Set([FuzzyMatch.type, IncludeMatch.type]);\n\n/**\n * Command-like searching\n * ======================\n *\n * Given multiple search terms delimited by spaces.e.g. `^jscript .python$ ruby !java`,\n * search in a given text.\n *\n * Search syntax:\n *\n * | Token       | Match type                 | Description                            |\n * | ----------- | -------------------------- | -------------------------------------- |\n * | `jscript`   | fuzzy-match                | Items that fuzzy match `jscript`       |\n * | `=scheme`   | exact-match                | Items that are `scheme`                |\n * | `'python`   | include-match              | Items that include `python`            |\n * | `!ruby`     | inverse-exact-match        | Items that do not include `ruby`       |\n * | `^java`     | prefix-exact-match         | Items that start with `java`           |\n * | `!^earlang` | inverse-prefix-exact-match | Items that do not start with `earlang` |\n * | `.js$`      | suffix-exact-match         | Items that end with `.js`              |\n * | `!.go$`     | inverse-suffix-exact-match | Items that do not end with `.go`       |\n *\n * A single pipe character acts as an OR operator. For example, the following\n * query matches entries that start with `core` and end with either`go`, `rb`,\n * or`py`.\n *\n * ```\n * ^core go$ | rb$ | py$\n * ```\n */\nclass ExtendedSearch {\n  constructor(\n    pattern,\n    {\n      isCaseSensitive = Config.isCaseSensitive,\n      includeMatches = Config.includeMatches,\n      minMatchCharLength = Config.minMatchCharLength,\n      ignoreLocation = Config.ignoreLocation,\n      findAllMatches = Config.findAllMatches,\n      location = Config.location,\n      threshold = Config.threshold,\n      distance = Config.distance\n    } = {}\n  ) {\n    this.query = null;\n    this.options = {\n      isCaseSensitive,\n      includeMatches,\n      minMatchCharLength,\n      findAllMatches,\n      ignoreLocation,\n      location,\n      threshold,\n      distance\n    };\n\n    this.pattern = isCaseSensitive ? pattern : pattern.toLowerCase();\n    this.query = parseQuery(this.pattern, this.options);\n  }\n\n  static condition(_, options) {\n    return options.useExtendedSearch\n  }\n\n  searchIn(text) {\n    const query = this.query;\n\n    if (!query) {\n      return {\n        isMatch: false,\n        score: 1\n      }\n    }\n\n    const { includeMatches, isCaseSensitive } = this.options;\n\n    text = isCaseSensitive ? text : text.toLowerCase();\n\n    let numMatches = 0;\n    let allIndices = [];\n    let totalScore = 0;\n\n    // ORs\n    for (let i = 0, qLen = query.length; i < qLen; i += 1) {\n      const searchers = query[i];\n\n      // Reset indices\n      allIndices.length = 0;\n      numMatches = 0;\n\n      // ANDs\n      for (let j = 0, pLen = searchers.length; j < pLen; j += 1) {\n        const searcher = searchers[j];\n        const { isMatch, indices, score } = searcher.search(text);\n\n        if (isMatch) {\n          numMatches += 1;\n          totalScore += score;\n          if (includeMatches) {\n            const type = searcher.constructor.type;\n            if (MultiMatchSet.has(type)) {\n              allIndices = [...allIndices, ...indices];\n            } else {\n              allIndices.push(indices);\n            }\n          }\n        } else {\n          totalScore = 0;\n          numMatches = 0;\n          allIndices.length = 0;\n          break\n        }\n      }\n\n      // OR condition, so if TRUE, return\n      if (numMatches) {\n        let result = {\n          isMatch: true,\n          score: totalScore / numMatches\n        };\n\n        if (includeMatches) {\n          result.indices = allIndices;\n        }\n\n        return result\n      }\n    }\n\n    // Nothing was matched\n    return {\n      isMatch: false,\n      score: 1\n    }\n  }\n}\n\nconst registeredSearchers = [];\n\nfunction register(...args) {\n  registeredSearchers.push(...args);\n}\n\nfunction createSearcher(pattern, options) {\n  for (let i = 0, len = registeredSearchers.length; i < len; i += 1) {\n    let searcherClass = registeredSearchers[i];\n    if (searcherClass.condition(pattern, options)) {\n      return new searcherClass(pattern, options)\n    }\n  }\n\n  return new BitapSearch(pattern, options)\n}\n\nconst LogicalOperator = {\n  AND: '$and',\n  OR: '$or'\n};\n\nconst KeyType = {\n  PATH: '$path',\n  PATTERN: '$val'\n};\n\nconst isExpression = (query) =>\n  !!(query[LogicalOperator.AND] || query[LogicalOperator.OR]);\n\nconst isPath = (query) => !!query[KeyType.PATH];\n\nconst isLeaf = (query) =>\n  !isArray(query) && isObject(query) && !isExpression(query);\n\nconst convertToExplicit = (query) => ({\n  [LogicalOperator.AND]: Object.keys(query).map((key) => ({\n    [key]: query[key]\n  }))\n});\n\n// When `auto` is `true`, the parse function will infer and initialize and add\n// the appropriate `Searcher` instance\nfunction parse(query, options, { auto = true } = {}) {\n  const next = (query) => {\n    let keys = Object.keys(query);\n\n    const isQueryPath = isPath(query);\n\n    if (!isQueryPath && keys.length > 1 && !isExpression(query)) {\n      return next(convertToExplicit(query))\n    }\n\n    if (isLeaf(query)) {\n      const key = isQueryPath ? query[KeyType.PATH] : keys[0];\n\n      const pattern = isQueryPath ? query[KeyType.PATTERN] : query[key];\n\n      if (!isString(pattern)) {\n        throw new Error(LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY(key))\n      }\n\n      const obj = {\n        keyId: createKeyId(key),\n        pattern\n      };\n\n      if (auto) {\n        obj.searcher = createSearcher(pattern, options);\n      }\n\n      return obj\n    }\n\n    let node = {\n      children: [],\n      operator: keys[0]\n    };\n\n    keys.forEach((key) => {\n      const value = query[key];\n\n      if (isArray(value)) {\n        value.forEach((item) => {\n          node.children.push(next(item));\n        });\n      }\n    });\n\n    return node\n  };\n\n  if (!isExpression(query)) {\n    query = convertToExplicit(query);\n  }\n\n  return next(query)\n}\n\n// Practical scoring function\nfunction computeScore(\n  results,\n  { ignoreFieldNorm = Config.ignoreFieldNorm }\n) {\n  results.forEach((result) => {\n    let totalScore = 1;\n\n    result.matches.forEach(({ key, norm, score }) => {\n      const weight = key ? key.weight : null;\n\n      totalScore *= Math.pow(\n        score === 0 && weight ? Number.EPSILON : score,\n        (weight || 1) * (ignoreFieldNorm ? 1 : norm)\n      );\n    });\n\n    result.score = totalScore;\n  });\n}\n\nfunction transformMatches(result, data) {\n  const matches = result.matches;\n  data.matches = [];\n\n  if (!isDefined(matches)) {\n    return\n  }\n\n  matches.forEach((match) => {\n    if (!isDefined(match.indices) || !match.indices.length) {\n      return\n    }\n\n    const { indices, value } = match;\n\n    let obj = {\n      indices,\n      value\n    };\n\n    if (match.key) {\n      obj.key = match.key.src;\n    }\n\n    if (match.idx > -1) {\n      obj.refIndex = match.idx;\n    }\n\n    data.matches.push(obj);\n  });\n}\n\nfunction transformScore(result, data) {\n  data.score = result.score;\n}\n\nfunction format(\n  results,\n  docs,\n  {\n    includeMatches = Config.includeMatches,\n    includeScore = Config.includeScore\n  } = {}\n) {\n  const transformers = [];\n\n  if (includeMatches) transformers.push(transformMatches);\n  if (includeScore) transformers.push(transformScore);\n\n  return results.map((result) => {\n    const { idx } = result;\n\n    const data = {\n      item: docs[idx],\n      refIndex: idx\n    };\n\n    if (transformers.length) {\n      transformers.forEach((transformer) => {\n        transformer(result, data);\n      });\n    }\n\n    return data\n  })\n}\n\nclass Fuse {\n  constructor(docs, options = {}, index) {\n    this.options = { ...Config, ...options };\n\n    if (\n      this.options.useExtendedSearch &&\n      !true\n    ) {\n      throw new Error(EXTENDED_SEARCH_UNAVAILABLE)\n    }\n\n    this._keyStore = new KeyStore(this.options.keys);\n\n    this.setCollection(docs, index);\n  }\n\n  setCollection(docs, index) {\n    this._docs = docs;\n\n    if (index && !(index instanceof FuseIndex)) {\n      throw new Error(INCORRECT_INDEX_TYPE)\n    }\n\n    this._myIndex =\n      index ||\n      createIndex(this.options.keys, this._docs, {\n        getFn: this.options.getFn,\n        fieldNormWeight: this.options.fieldNormWeight\n      });\n  }\n\n  add(doc) {\n    if (!isDefined(doc)) {\n      return\n    }\n\n    this._docs.push(doc);\n    this._myIndex.add(doc);\n  }\n\n  remove(predicate = (/* doc, idx */) => false) {\n    const results = [];\n\n    for (let i = 0, len = this._docs.length; i < len; i += 1) {\n      const doc = this._docs[i];\n      if (predicate(doc, i)) {\n        this.removeAt(i);\n        i -= 1;\n        len -= 1;\n\n        results.push(doc);\n      }\n    }\n\n    return results\n  }\n\n  removeAt(idx) {\n    this._docs.splice(idx, 1);\n    this._myIndex.removeAt(idx);\n  }\n\n  getIndex() {\n    return this._myIndex\n  }\n\n  search(query, { limit = -1 } = {}) {\n    const {\n      includeMatches,\n      includeScore,\n      shouldSort,\n      sortFn,\n      ignoreFieldNorm\n    } = this.options;\n\n    let results = isString(query)\n      ? isString(this._docs[0])\n        ? this._searchStringList(query)\n        : this._searchObjectList(query)\n      : this._searchLogical(query);\n\n    computeScore(results, { ignoreFieldNorm });\n\n    if (shouldSort) {\n      results.sort(sortFn);\n    }\n\n    if (isNumber(limit) && limit > -1) {\n      results = results.slice(0, limit);\n    }\n\n    return format(results, this._docs, {\n      includeMatches,\n      includeScore\n    })\n  }\n\n  _searchStringList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { records } = this._myIndex;\n    const results = [];\n\n    // Iterate over every string in the index\n    records.forEach(({ v: text, i: idx, n: norm }) => {\n      if (!isDefined(text)) {\n        return\n      }\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        results.push({\n          item: text,\n          idx,\n          matches: [{ score, value: text, norm, indices }]\n        });\n      }\n    });\n\n    return results\n  }\n\n  _searchLogical(query) {\n\n    const expression = parse(query, this.options);\n\n    const evaluate = (node, item, idx) => {\n      if (!node.children) {\n        const { keyId, searcher } = node;\n\n        const matches = this._findMatches({\n          key: this._keyStore.get(keyId),\n          value: this._myIndex.getValueForItemAtKeyId(item, keyId),\n          searcher\n        });\n\n        if (matches && matches.length) {\n          return [\n            {\n              idx,\n              item,\n              matches\n            }\n          ]\n        }\n\n        return []\n      }\n\n      const res = [];\n      for (let i = 0, len = node.children.length; i < len; i += 1) {\n        const child = node.children[i];\n        const result = evaluate(child, item, idx);\n        if (result.length) {\n          res.push(...result);\n        } else if (node.operator === LogicalOperator.AND) {\n          return []\n        }\n      }\n      return res\n    };\n\n    const records = this._myIndex.records;\n    const resultMap = {};\n    const results = [];\n\n    records.forEach(({ $: item, i: idx }) => {\n      if (isDefined(item)) {\n        let expResults = evaluate(expression, item, idx);\n\n        if (expResults.length) {\n          // Dedupe when adding\n          if (!resultMap[idx]) {\n            resultMap[idx] = { idx, item, matches: [] };\n            results.push(resultMap[idx]);\n          }\n          expResults.forEach(({ matches }) => {\n            resultMap[idx].matches.push(...matches);\n          });\n        }\n      }\n    });\n\n    return results\n  }\n\n  _searchObjectList(query) {\n    const searcher = createSearcher(query, this.options);\n    const { keys, records } = this._myIndex;\n    const results = [];\n\n    // List is Array<Object>\n    records.forEach(({ $: item, i: idx }) => {\n      if (!isDefined(item)) {\n        return\n      }\n\n      let matches = [];\n\n      // Iterate over every key (i.e, path), and fetch the value at that key\n      keys.forEach((key, keyIndex) => {\n        matches.push(\n          ...this._findMatches({\n            key,\n            value: item[keyIndex],\n            searcher\n          })\n        );\n      });\n\n      if (matches.length) {\n        results.push({\n          idx,\n          item,\n          matches\n        });\n      }\n    });\n\n    return results\n  }\n  _findMatches({ key, value, searcher }) {\n    if (!isDefined(value)) {\n      return []\n    }\n\n    let matches = [];\n\n    if (isArray(value)) {\n      value.forEach(({ v: text, i: idx, n: norm }) => {\n        if (!isDefined(text)) {\n          return\n        }\n\n        const { isMatch, score, indices } = searcher.searchIn(text);\n\n        if (isMatch) {\n          matches.push({\n            score,\n            key,\n            value: text,\n            idx,\n            norm,\n            indices\n          });\n        }\n      });\n    } else {\n      const { v: text, n: norm } = value;\n\n      const { isMatch, score, indices } = searcher.searchIn(text);\n\n      if (isMatch) {\n        matches.push({ score, key, value: text, norm, indices });\n      }\n    }\n\n    return matches\n  }\n}\n\nFuse.version = '7.0.0';\nFuse.createIndex = createIndex;\nFuse.parseIndex = parseIndex;\nFuse.config = Config;\n\n{\n  Fuse.parseQuery = parse;\n}\n\n{\n  register(ExtendedSearch);\n}\n\nexport { Fuse as default };\n"],"names":["htmlDecodeTree","c","xmlDecodeTree","_a","decodeMap","fromCodePoint","codePoint","output","replaceCodePoint","CharCodes","TO_LOWER_BIT","BinTrieFlags","isNumber","code","isHexadecimalCharacter","isAsciiAlphaNumeric","isEntityInAttributeInvalidEnd","EntityDecoderState","DecodingMode","EntityDecoder","decodeTree","emitCodePoint","errors","decodeMode","str","offset","start","end","base","digitCount","startIdx","char","lastCp","expectedLength","current","valueLength","determineBranch","result","consumed","getDecoder","ret","decoder","lastIndex","len","nodeIdx","branchCount","jumpOffset","value","lo","hi","mid","midVal","xmlReplacer","xmlCodeMap","getCodePoint","index","encodeXML","lastIdx","match","i","next","getEscaper","regex","map","data","escapeAttribute","escapeText","UNDEFINED_CODE_POINTS","REPLACEMENT_CHARACTER","CODE_POINTS","SEQUENCES","isSurrogate","cp","isSurrogatePair","getSurrogatePairCodePoint","cp1","cp2","isControlCodePoint","isUndefinedCodePoint","ERR","DEFAULT_BUFFER_WATERLINE","Preprocessor","handler","cpOffset","line","col","startCol","startOffset","nextCp","$","chunk","isLastChunk","pattern","caseSensitive","pos","count","TokenType","getTokenAttr","token","attrName","NS","ATTRS","DOCUMENT_MODE","TAG_NAMES","TAG_ID","TAG_NAME_TO_ID","getTagID","tagName","SPECIAL_ELEMENTS","NUMBERED_HEADERS","UNESCAPED_TEXT","hasUnescapedText","tn","scriptingEnabled","State","TokenizerMode","isAsciiDigit","isAsciiUpper","isAsciiLower","isAsciiLetter","toAsciiLower","isWhitespace","isScriptDataDoubleEscapeSequenceEnd","getErrorForNumericCharacterReference","Tokenizer$1","options","error","_b","writeCallback","initialName","type","chars","attrNameFirstCh","attrLocations","ct","nextLocation","location","ch","_cp","$$","length","IMPLICIT_END_TAG_REQUIRED","IMPLICIT_END_TAG_REQUIRED_THOROUGHLY","SCOPING_ELEMENTS_HTML","SCOPING_ELEMENTS_HTML_LIST","SCOPING_ELEMENTS_HTML_BUTTON","SCOPING_ELEMENTS_MATHML","SCOPING_ELEMENTS_SVG","TABLE_ROW_CONTEXT","TABLE_BODY_CONTEXT","TABLE_CONTEXT","TABLE_CELLS","OpenElementStack","document","treeAdapter","element","tagID","popped","oldElement","newElement","idx","referenceElement","newElementID","insertionIdx","targetIdx","tagNames","targetNS","namespace","elementIdx","htmlScope","exclusionId","NOAH_ARK_CAPACITY","EntryType","MARKER","FormattingElementList","neAttrs","candidates","neAttrsLength","neTagName","neNamespaceURI","entry","elementAttrs","neAttrsMap","neAttr","validCandidates","candidate","cAttr","bookmarkIdx","entryIndex","markerIdx","defaultTreeAdapter","namespaceURI","attrs","parentNode","newNode","referenceNode","templateElement","contentElement","name","publicId","systemId","doctypeNode","node","mode","text","prevNode","recipient","recipientAttrsMap","attr","j","textNode","commentNode","endLocation","VALID_DOCTYPE_NAME","VALID_SYSTEM_ID","QUIRKS_MODE_SYSTEM_ID","QUIRKS_MODE_PUBLIC_ID_PREFIXES","QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES","QUIRKS_MODE_PUBLIC_IDS","LIMITED_QUIRKS_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES","hasPrefix","prefixes","prefix","isConforming","getDocumentMode","MIME_TYPES","DEFINITION_URL_ATTR","ADJUSTED_DEFINITION_URL_ATTR","SVG_ATTRS_ADJUSTMENT_MAP","XML_ATTRS_ADJUSTMENT_MAP","SVG_TAG_NAMES_ADJUSTMENT_MAP","EXITS_FOREIGN_CONTENT","causesExit","startTagToken","adjustTokenMathMLAttrs","adjustTokenSVGAttrs","adjustedAttrName","adjustTokenXMLAttrs","adjustedAttrEntry","adjustTokenSVGTagName","adjustedTagName","isMathMLTextIntegrationPoint","ns","isHtmlIntegrationPoint","isIntegrationPoint","foreignNS","HIDDEN_INPUT_TYPE","AA_OUTER_LOOP_ITER","AA_INNER_LOOP_ITER","InsertionMode","BASE_LOC","TABLE_STRUCTURE_TAGS","defaultParserOptions","Parser$1","fragmentContext","scriptHandler","Tokenizer","html","parser","opts","TN","documentMock","rootElement","fragment","beforeToken","loc","err","tid","isTop","currentTagId","isHTML","currentToken","nextTokenizerState","docTypeNode","parent","tmpl","content","beforeElement","siblings","textNodeIdx","endLine","endCol","endOffset","donor","child","closingToken","ctLoc","endLoc","foreignContent.isIntegrationPoint","listLength","endIndex","unopenIdx","selectIdx","openElement","id","characterInForeignContent","tokenInInitialMode","tokenBeforeHtml","tokenBeforeHead","tokenInHead","tokenInHeadNoScript","tokenAfterHead","characterInBody","characterInTable","characterInTableText","tokenInColumnGroup","tokenAfterBody","tokenAfterAfterBody","nullCharacterInForeignContent","appendComment","tokenInTableText","appendCommentToRootHtmlElement","appendCommentToDocument","doctypeInInitialMode","startTagInForeignContent","startTagBeforeHtml","startTagBeforeHead","startTagInHead","startTagInHeadNoScript","startTagAfterHead","startTagInBody","startTagInTable","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","startTagInCell","startTagInSelect","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","endTagInForeignContent","endTagBeforeHtml","endTagBeforeHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInText","eofInTemplate","stopParsing","unicode.CODE_POINTS","whitespaceCharacterInBody","whitespaceCharacterInTableText","aaObtainFormattingElementEntry","p","formattingElementEntry","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","aaInnerLoop","formattingElement","lastElement","nextElement","elementEntry","counterOverflow","aaRecreateElementFromEntry","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","callAdoptionAgency","target","htmlElement","htmlLocation","bodyElement","bodyLocation","doctype.getDocumentMode","doctype.isConforming","templateEndTagInHead","errCode","modeInBody","htmlStartTagInBody","bodyStartTagInBody","framesetStartTagInBody","addressStartTagInBody","numberedHeaderStartTagInBody","preStartTagInBody","formStartTagInBody","inTemplate","listItemStartTagInBody","elementId","plaintextStartTagInBody","buttonStartTagInBody","aStartTagInBody","activeElementEntry","bStartTagInBody","nobrStartTagInBody","appletStartTagInBody","tableStartTagInBody","areaStartTagInBody","isHiddenInput","inputType","inputStartTagInBody","paramStartTagInBody","hrStartTagInBody","imageStartTagInBody","textareaStartTagInBody","xmpStartTagInBody","iframeStartTagInBody","rawTextStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","rbStartTagInBody","rtStartTagInBody","mathStartTagInBody","foreignContent.adjustTokenMathMLAttrs","foreignContent.adjustTokenXMLAttrs","svgStartTagInBody","foreignContent.adjustTokenSVGAttrs","genericStartTagInBody","bodyEndTagInBody","htmlEndTagInBody","addressEndTagInBody","formEndTagInBody","formElement","pEndTagInBody","liEndTagInBody","ddEndTagInBody","numberedHeaderEndTagInBody","appletEndTagInBody","brEndTagInBody","tokenInTable","captionStartTagInTable","colgroupStartTagInTable","colStartTagInTable","tbodyStartTagInTable","tdStartTagInTable","tableStartTagInTable","inputStartTagInTable","formStartTagInTable","savedFosterParentingState","TABLE_VOID_ELEMENTS","unicode.REPLACEMENT_CHARACTER","popUntilHtmlOrIntegrationPoint","foreignContent.causesExit","currentNs","foreignContent.adjustTokenSVGTagName","VOID_ELEMENTS","isVoidElement","defaultOpts","serializeOuter","serializeNode","serializeChildNodes","container","childNodes","currentNode","serializeElement","serializeTextNode","serializeCommentNode","serializeDocumentTypeNode","serializeAttributes","parentTn","parse","Parser","parseFragment","enquoteDoctypeId","quote","serializeDoctypeContent","adapter","isComment","isTag","isText","Document","html.DOCUMENT_MODE","attribs","attribsNamespace","attribsPrefix","Element","Comment","Text","prev","isDirective","ProcessingInstruction","lastChild","parseWithParse5","isDocument","context","htmlparser2Adapter","parseDocument","renderOpts","renderWithParse5","dom","nodes","isEndOfTagSection","isASCIIAlpha","QuoteType","Sequences","xmlMode","decodeEntities","cbs","isEnd","endOfText","actualIndex","sequence","lower","formTags","pTag","tableSectionTags","ddtTags","rtpTags","openImpliesClose","voidElements","foreignContextElements","htmlIntegrationElements","reNameEnd","_c","_d","_e","_f","impliesClose","isImplied","_g","_h","isOpenImplied","_j","_k","slice","DomHandler","Handler","build","detect","helper","_options","buildHandler","args","FORMAT_NAME","s","hh","mm","ss","ff","ms","_buildCaptionData","columns","values","meta","captions","eol","parts","part","tag","lines","lineMatch","caption","indexOfText","ass","ssa","res","json","lyrics","lrc","sbv","title","style","sami","_part","blank","pMatch","smi","srt","DEFAULT_FPS","fps","sub","startFrame","endFrame","vtt","formats","clone","obj","Subsrt","format","detected","func","parseOptions","buildOptions","ratio","frame","a","resynced","_caption","shift","subsrt","list","convert","resync","entries","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","create","apply","construct","x","fun","thisValue","Func","arrayForEach","unapply","arrayPop","arrayPush","stringToLowerCase","stringToString","stringMatch","stringReplace","stringIndexOf","stringTrim","objectHasOwnProperty","regExpTest","typeErrorCreate","unconstruct","thisArg","_len","_key","_len2","_key2","addToSet","set","array","transformCaseFunc","l","lcElement","cleanArray","object","newObject","property","lookupGetter","prop","desc","fallbackValue","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","CUSTOM_ELEMENT","EXPRESSIONS","NODE_TYPE","getGlobal","_createTrustedTypesPolicy","trustedTypes","purifyHostElement","suffix","ATTR_NAME","policyName","scriptUrl","_createHooksMap","createDOMPurify","window","DOMPurify","root","originalDocument","currentScript","DocumentFragment","HTMLTemplateElement","Node","NodeFilter","NamedNodeMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","remove","getNextSibling","getChildNodes","getParentNode","template","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","hooks","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","SAFE_FOR_XML","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","isRegexOrFunction","testValue","_parseConfig","cfg","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parentTagName","_forceRemove","_removeAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","body","_createNodeIterator","_isClobbered","_isNode","_executeHooks","hook","_sanitizeElements","_isBasicCustomElement","childCount","childClone","expr","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","attributes","hookEvent","attrValue","_sanitizeShadowDOM","shadowNode","shadowIterator","importedNode","returnNode","nodeIterator","serializedHTML","entryPoint","hookFunction","purify","isArray","getTag","INFINITY","baseToString","toString","isString","isBoolean","isObjectLike","isObject","isDefined","isBlank","INCORRECT_INDEX_TYPE","LOGICAL_SEARCH_INVALID_QUERY_FOR_KEY","key","PATTERN_LENGTH_TOO_LARGE","max","MISSING_KEY_PROPERTY","INVALID_KEY_WEIGHT_VALUE","hasOwn","KeyStore","keys","totalWeight","createKey","keyId","path","src","weight","getFn","createKeyPath","createKeyId","get","arr","deepGet","MatchOptions","BasicOptions","b","FuzzyOptions","AdvancedOptions","Config","SPACE","norm","mantissa","cache","m","numTokens","n","FuseIndex","fieldNormWeight","docs","records","docIndex","item","record","keyIndex","subRecords","stack","nestedArrIndex","subRecord","k","createIndex","myIndex","parseIndex","computeScore$1","currentLocation","expectedLocation","distance","ignoreLocation","accuracy","proximity","convertMaskToIndices","matchmask","minMatchCharLength","indices","MAX_BITS","search","patternAlphabet","threshold","findAllMatches","includeMatches","patternLen","textLen","currentThreshold","bestLocation","computeMatches","matchMask","score","lastBitArr","finalScore","binMax","mask","binMin","binMid","finish","bitArr","charMatch","createPatternAlphabet","BitapSearch","isCaseSensitive","addChunk","startIndex","remainder","allIndices","totalScore","hasMatches","alphabet","isMatch","BaseMatch","getMatch","exp","ExactMatch","InverseExactMatch","PrefixExactMatch","InversePrefixExactMatch","SuffixExactMatch","InverseSuffixExactMatch","FuzzyMatch","IncludeMatch","searchers","searchersLen","SPACE_RE","OR_TOKEN","parseQuery","query","results","queryItem","found","searcher","MultiMatchSet","ExtendedSearch","_","numMatches","qLen","pLen","registeredSearchers","register","createSearcher","searcherClass","LogicalOperator","KeyType","isExpression","isPath","isLeaf","convertToExplicit","auto","isQueryPath","computeScore","ignoreFieldNorm","transformMatches","transformScore","includeScore","transformers","transformer","Fuse","predicate","limit","shouldSort","sortFn","expression","evaluate","resultMap","expResults"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37]}